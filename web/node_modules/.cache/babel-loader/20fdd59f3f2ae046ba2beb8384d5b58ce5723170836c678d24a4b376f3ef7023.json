{"ast":null,"code":"import * as Blockly from 'blockly/core';\n\n// Create a custom block for declaring an integer variable in code.\nconst floatVarDeclaration = {\n  'type': 'float_var_declaration',\n  'message0': 'Declare float variable %1 = %2',\n  'args0': [{\n    'type': 'field_variable',\n    'name': 'VAR',\n    'variable': 'my_variable'\n  }, {\n    'type': 'input_value',\n    'name': 'VALUE',\n    'check': 'Number'\n  }],\n  'previousStatement': null,\n  'nextStatement': null,\n  'colour': 160,\n  'tooltip': '',\n  'helpUrl': ''\n};\n\n// Create the block definitions for the JSON-only blocks.\nexport const floatVarDeclarationBlock = Blockly.common.createBlockDefinitionsFromJsonArray([floatVarDeclaration]);","map":{"version":3,"names":["Blockly","floatVarDeclaration","floatVarDeclarationBlock","common","createBlockDefinitionsFromJsonArray"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/floatVars.js"],"sourcesContent":["import * as Blockly from 'blockly/core';\n\n// Create a custom block for declaring an integer variable in code.\nconst floatVarDeclaration = {\n  'type': 'float_var_declaration',\n  'message0': 'Declare float variable %1 = %2',\n  'args0': [\n    {\n      'type': 'field_variable',\n      'name': 'VAR',\n      'variable': 'my_variable',\n    },\n    {\n      'type': 'input_value',\n      'name': 'VALUE',\n      'check': 'Number',\n    },\n  ],\n  'previousStatement': null,\n  'nextStatement': null,\n  'colour': 160,\n  'tooltip': '',\n  'helpUrl': '',\n};\n\n// Create the block definitions for the JSON-only blocks.\nexport const floatVarDeclarationBlock = Blockly.common.createBlockDefinitionsFromJsonArray([floatVarDeclaration]);\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,cAAc;;AAEvC;AACA,MAAMC,mBAAmB,GAAG;EAC1B,MAAM,EAAE,uBAAuB;EAC/B,UAAU,EAAE,gCAAgC;EAC5C,OAAO,EAAE,CACP;IACE,MAAM,EAAE,gBAAgB;IACxB,MAAM,EAAE,KAAK;IACb,UAAU,EAAE;EACd,CAAC,EACD;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,OAAO;IACf,OAAO,EAAE;EACX,CAAC,CACF;EACD,mBAAmB,EAAE,IAAI;EACzB,eAAe,EAAE,IAAI;EACrB,QAAQ,EAAE,GAAG;EACb,SAAS,EAAE,EAAE;EACb,SAAS,EAAE;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,wBAAwB,GAAGF,OAAO,CAACG,MAAM,CAACC,mCAAmC,CAAC,CAACH,mBAAmB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}