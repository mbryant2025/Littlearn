{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport LeftBar from './LeftBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WindowManager() {\n  _s();\n  const [isConsoleVisible, setConsoleVisibility] = useState(false);\n  const toggleSiblingVisibility = () => {\n    setConsoleVisibility(!isSiblingVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-divider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-bar\",\n        children: /*#__PURE__*/_jsxDEV(LeftBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area\",\n        children: /*#__PURE__*/_jsxDEV(BlocklyComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(WindowManager, \"o1VmYl4zlMouqNuqK53CLEpZ4Q8=\");\n_c = WindowManager;\nexport default WindowManager;\nvar _c;\n$RefreshReg$(_c, \"WindowManager\");","map":{"version":3,"names":["React","useState","BlocklyComponent","LeftBar","jsxDEV","_jsxDEV","WindowManager","_s","isConsoleVisible","setConsoleVisibility","toggleSiblingVisibility","isSiblingVisible","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport LeftBar from './LeftBar';\n\nfunction WindowManager() {\n  const [isConsoleVisible, setConsoleVisibility] = useState(false);\n\n  const toggleSiblingVisibility = () => {\n    setConsoleVisibility(!isSiblingVisible);\n  };\n\n  return (\n    <div>\n      {/* <button onClick={toggleSiblingVisibility}>\n        {isSiblingVisible ? 'Hide Sibling' : 'Show Sibling'}\n      </button>\n      {isSiblingVisible && <SiblingComponent />}\n      <ChildComponent toggleSiblingVisibility={toggleSiblingVisibility} />\n */}\n\n\n\n\n\n\n\n      <div className=\"main-divider\">\n        <div className=\"left-bar\">\n          <LeftBar />\n        </div>\n        <div className=\"main-area\">\n          <BlocklyComponent />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WindowManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,WAAW;AACxC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,gBAAgB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEhE,MAAMS,uBAAuB,GAAGA,CAAA,KAAM;IACpCD,oBAAoB,CAAC,CAACE,gBAAgB,CAAC;EACzC,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,eAcEP,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BP,OAAA;QAAKQ,SAAS,EAAC,UAAU;QAAAD,QAAA,eACvBP,OAAA,CAACF,OAAO;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNZ,OAAA;QAAKQ,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBP,OAAA,CAACH,gBAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CAhCQD,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}