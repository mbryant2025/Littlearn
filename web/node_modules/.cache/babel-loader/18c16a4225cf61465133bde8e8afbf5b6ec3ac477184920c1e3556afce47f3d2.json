{"ast":null,"code":"'use strict';\n\nvar format = require('./format');\nvar _require = require('triple-beam'),\n  MESSAGE = _require.MESSAGE;\nvar stringify = require('safe-stable-stringify');\n\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\nfunction replacer(key, value) {\n  // safe-stable-stringify does support BigInt, however, it doesn't wrap the value in quotes.\n  // Leading to a loss in fidelity if the resulting string is parsed.\n  // It would also be a breaking change for logform.\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\nmodule.exports = format(function (info, opts) {\n  var jsonStringify = stringify.configure(opts);\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"names":["format","require","_require","MESSAGE","stringify","replacer","key","value","toString","module","exports","info","opts","jsonStringify","configure","space"],"sources":["/Users/michaelbryant/node_modules/logform/dist/json.js"],"sourcesContent":["'use strict';\n\nvar format = require('./format');\nvar _require = require('triple-beam'),\n  MESSAGE = _require.MESSAGE;\nvar stringify = require('safe-stable-stringify');\n\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer and bigint output.\n */\nfunction replacer(key, value) {\n  // safe-stable-stringify does support BigInt, however, it doesn't wrap the value in quotes.\n  // Leading to a loss in fidelity if the resulting string is parsed.\n  // It would also be a breaking change for logform.\n  if (typeof value === 'bigint') return value.toString();\n  return value;\n}\n\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\nmodule.exports = format(function (info, opts) {\n  var jsonStringify = stringify.configure(opts);\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;EACnCE,OAAO,GAAGD,QAAQ,CAACC,OAAO;AAC5B,IAAIC,SAAS,GAAGH,OAAO,CAAC,uBAAuB,CAAC;;AAEhD;AACA;AACA;AACA;AACA,SAASI,QAAQA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC5B;EACA;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK,CAACC,QAAQ,CAAC,CAAC;EACtD,OAAOD,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAGV,MAAM,CAAC,UAAUW,IAAI,EAAEC,IAAI,EAAE;EAC5C,IAAIC,aAAa,GAAGT,SAAS,CAACU,SAAS,CAACF,IAAI,CAAC;EAC7CD,IAAI,CAACR,OAAO,CAAC,GAAGU,aAAa,CAACF,IAAI,EAAEC,IAAI,CAACP,QAAQ,IAAIA,QAAQ,EAAEO,IAAI,CAACG,KAAK,CAAC;EAC1E,OAAOJ,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}