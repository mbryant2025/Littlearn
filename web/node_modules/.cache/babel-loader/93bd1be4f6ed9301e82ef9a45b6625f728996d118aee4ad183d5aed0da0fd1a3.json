{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/\n\nexport const toolbox = {\n  'kind': 'categoryToolbox',\n  'contents': [{\n    'kind': 'category',\n    'name': 'I/O',\n    'categorystyle': 'text_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'print',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'sevenseg',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1234\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'button',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 1\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'switch',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 2\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'beam',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 2\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'motion',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 3\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'fan',\n      'inputs': {\n        'PORT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        },\n        'VALUE': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'LED',\n      'inputs': {\n        'PORT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        },\n        'VALUE': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 0\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Control',\n    'categorystyle': 'text_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'if',\n      'inputs': {\n        'CONDITION': {\n          'type': 'math_number',\n          'fields': {\n            'NUM': 9\n          }\n        },\n        'DO': {\n          'type': 'statement'\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'while',\n      'inputs': {\n        'CONDITION': {\n          'type': 'math_number',\n          'fields': {\n            'NUM': 9\n          }\n        },\n        'DO': {\n          'type': 'statement'\n        }\n      }\n    }, {\n      'kind': 'block',\n      'type': 'wait',\n      'inputs': {\n        'TEXT': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 500\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Math',\n    'categorystyle': 'text_category',\n    'contents': [{\n      'kind': 'block',\n      'type': 'math_number',\n      'fields': {\n        'NUM': 123\n      }\n    }, {\n      'kind': 'block',\n      'type': 'binaryOp'\n    }, {\n      'kind': 'block',\n      'type': 'math_modulo',\n      'inputs': {\n        'DIVIDEND': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 64\n            }\n          }\n        },\n        'DIVISOR': {\n          'shadow': {\n            'type': 'math_number',\n            'fields': {\n              'NUM': 10\n            }\n          }\n        }\n      }\n    }]\n  }, {\n    'kind': 'category',\n    'name': 'Variables',\n    'categorystyle': 'text_category',\n    'contents': [{\n      'kind': 'button',\n      'text': 'Create New Variable',\n      'callbackKey': 'CREATE_INT_VARIABLE'\n    }, {\n      'kind': 'block',\n      'type': 'int_var_declaration'\n    }, {\n      'kind': 'block',\n      'type': 'float_var_declaration'\n    }, {\n      'kind': 'block',\n      'type': 'use_variable' // Add the 'use_variable' block to the toolbox\n    }, {\n      'kind': 'block',\n      'type': 'assign_variable'\n    }]\n  }]\n};","map":{"version":3,"names":["toolbox"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/toolbox.js"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/\n\nexport const toolbox = {\n    'kind': 'categoryToolbox',\n    'contents': [\n      {\n        'kind': 'category',\n        'name': 'I/O',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'print',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'sevenseg',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1234,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'button',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'switch',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 2,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'beam',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 2,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'motion',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 3,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'fan',\n            'inputs': {\n              'PORT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n              'VALUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'LED',\n            'inputs': {\n              'PORT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n              'VALUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Control',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'if',\n            'inputs': {\n              'CONDITION': {\n                'type': 'math_number',\n                'fields': {\n                  'NUM': 9,\n                },\n              },\n              'DO': {\n                'type': 'statement',\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'while',\n            'inputs': {\n              'CONDITION': {\n                'type': 'math_number',\n                'fields': {\n                  'NUM': 9,\n                },\n              },\n              'DO': {\n                'type': 'statement',\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'wait',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 500,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Math',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'math_number',\n            'fields': {\n              'NUM': 123,\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'binaryOp',\n          },\n          {\n            'kind': 'block',\n            'type': 'math_modulo',\n            'inputs': {\n              'DIVIDEND': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 64,\n                  },\n                },\n              },\n              'DIVISOR': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 10,\n                  },\n                },\n              },\n            },\n          },\n         \n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Variables',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'button',\n            'text': 'Create New Variable',\n            'callbackKey': 'CREATE_INT_VARIABLE',\n          },\n          {\n            'kind': 'block',\n            'type': 'int_var_declaration',\n          },\n          {\n            'kind': 'block',\n            'type': 'float_var_declaration',\n          },\n          {\n            'kind': 'block',\n            'type': 'use_variable', // Add the 'use_variable' block to the toolbox\n          },\n          {\n            'kind': 'block',\n            'type': 'assign_variable',\n          },\n        ]\n      }\n    ],\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}