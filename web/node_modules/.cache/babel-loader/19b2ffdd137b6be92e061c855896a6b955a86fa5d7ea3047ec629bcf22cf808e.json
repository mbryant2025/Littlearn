{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport BluetoothConsole from './BluetoothConsole';\nimport LeftBar from './LeftBar';\nimport './styles/WindowManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WindowManager() {\n  _s();\n  const [isConsoleVisible, setConsoleVisibility] = useState(false);\n  const toggleConsoleVisibility = () => {\n    setConsoleVisibility(!isConsoleVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-divider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-bar\",\n        children: /*#__PURE__*/_jsxDEV(LeftBar, {\n          toggleConsoleVisibility: toggleConsoleVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-area ${isConsoleVisible ? 'show-right-column' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blockly-area\",\n          children: /*#__PURE__*/_jsxDEV(BlocklyComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), isConsoleVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"console-area\",\n          children: /*#__PURE__*/_jsxDEV(BluetoothConsole, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(WindowManager, \"o1VmYl4zlMouqNuqK53CLEpZ4Q8=\");\n_c = WindowManager;\nexport default WindowManager;\nvar _c;\n$RefreshReg$(_c, \"WindowManager\");","map":{"version":3,"names":["React","useState","BlocklyComponent","BluetoothConsole","LeftBar","jsxDEV","_jsxDEV","WindowManager","_s","isConsoleVisible","setConsoleVisibility","toggleConsoleVisibility","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport BluetoothConsole from './BluetoothConsole';\nimport LeftBar from './LeftBar';\nimport './styles/WindowManager.css';\n\n\nfunction WindowManager() {\n    const [isConsoleVisible, setConsoleVisibility] = useState(false);\n\n    const toggleConsoleVisibility = () => {\n        setConsoleVisibility(!isConsoleVisible);\n    };\n\n    return (\n        <div>\n            <div className=\"main-divider\">\n                <div className=\"left-bar\">\n                    <LeftBar toggleConsoleVisibility={toggleConsoleVisibility}/>\n                </div>\n                <div className={`main-area ${isConsoleVisible ? 'show-right-column' : ''}`}>\n                    <div className=\"blockly-area\">\n                        <BlocklyComponent />\n                    </div>\n                    {isConsoleVisible &&\n                        <div className=\"console-area\">\n                            <BluetoothConsole />\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WindowManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,WAAW;AACxC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,gBAAgB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEhE,MAAMU,uBAAuB,GAAGA,CAAA,KAAM;IAClCD,oBAAoB,CAAC,CAACD,gBAAgB,CAAC;EAC3C,CAAC;EAED,oBACIH,OAAA;IAAAM,QAAA,eACIN,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAD,QAAA,gBACzBN,OAAA;QAAKO,SAAS,EAAC,UAAU;QAAAD,QAAA,eACrBN,OAAA,CAACF,OAAO;UAACO,uBAAuB,EAAEA;QAAwB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNX,OAAA;QAAKO,SAAS,EAAG,aAAYJ,gBAAgB,GAAG,mBAAmB,GAAG,EAAG,EAAE;QAAAG,QAAA,gBACvEN,OAAA;UAAKO,SAAS,EAAC,cAAc;UAAAD,QAAA,eACzBN,OAAA,CAACJ,gBAAgB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EACLR,gBAAgB,iBACbH,OAAA;UAAKO,SAAS,EAAC,cAAc;UAAAD,QAAA,eACzBN,OAAA,CAACH,gBAAgB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACT,EAAA,CA1BQD,aAAa;AAAAW,EAAA,GAAbX,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}