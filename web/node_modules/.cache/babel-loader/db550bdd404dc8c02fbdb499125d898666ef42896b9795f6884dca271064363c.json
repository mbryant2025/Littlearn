{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport './styles/BluetoothConsole.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BluetoothConsole() {\n  _s();\n  const {\n    bluetoothDevice,\n    outputText\n  } = useBluetooth();\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Received Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(BluetoothConsole, \"YMQ8Uv7pYQIKZ22HSiArNFGHchU=\", false, function () {\n  return [useBluetooth];\n});\n_c = BluetoothConsole;\nexport default BluetoothConsole;\nvar _c;\n$RefreshReg$(_c, \"BluetoothConsole\");","map":{"version":3,"names":["React","useEffect","useBluetooth","jsxDEV","_jsxDEV","BluetoothConsole","_s","bluetoothDevice","outputText","console","log","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport './styles/BluetoothConsole.css';\n\nfunction BluetoothConsole() {\n    const { bluetoothDevice, outputText } = useBluetooth();\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice]);\n\n    return (\n        <div className=\"console\">\n            <h3>Received Data:</h3>\n            <div>{outputText}</div>\n        </div>\n    );\n}\n\nexport default BluetoothConsole;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAGN,YAAY,CAAC,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,IAAIM,eAAe,EAAE;MACjBE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,eAAe,CAACI,IAAI,CAAC;IACtD,CAAC,MAAM;MACHF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACzD;EACJ,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,oBACIH,OAAA;IAAKQ,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBT,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBb,OAAA;MAAAS,QAAA,EAAML;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACX,EAAA,CAjBQD,gBAAgB;EAAA,QACmBH,YAAY;AAAA;AAAAgB,EAAA,GAD/Cb,gBAAgB;AAmBzB,eAAeA,gBAAgB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}