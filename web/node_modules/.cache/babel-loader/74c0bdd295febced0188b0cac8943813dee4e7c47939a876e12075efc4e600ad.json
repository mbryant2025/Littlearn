{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BluetoothStatus() {\n  _s();\n  const {\n    bluetoothDevice,\n    outputText,\n    connectToDevice,\n    disconnectDevice,\n    sendBluetoothData\n  } = useBluetooth();\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bluetooth Status: \", bluetoothDevice ? 'Connected to ' + bluetoothDevice.name : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(BluetoothStatus, \"AGUOGczqrNgtIgmDaWbdzWT/8WA=\", false, function () {\n  return [useBluetooth];\n});\n_c = BluetoothStatus;\nexport default BluetoothStatus;\nvar _c;\n$RefreshReg$(_c, \"BluetoothStatus\");","map":{"version":3,"names":["React","useEffect","useBluetooth","jsxDEV","_jsxDEV","BluetoothStatus","_s","bluetoothDevice","outputText","connectToDevice","disconnectDevice","sendBluetoothData","console","log","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothStatus.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\n\nfunction BluetoothStatus() {\n  const { bluetoothDevice, outputText, connectToDevice, disconnectDevice, sendBluetoothData } = useBluetooth();\n\n\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n\n  return (\n    <div>\n      <p>Bluetooth Status: {bluetoothDevice ? 'Connected to ' + bluetoothDevice.name : 'Disconnected'}</p>\n    </div>\n  );\n}\n\nexport default BluetoothStatus;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC,eAAe;IAAEC,UAAU;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC;EAAkB,CAAC,GAAGT,YAAY,CAAC,CAAC;EAG5GD,SAAS,CAAC,MAAM;IACd,IAAIM,eAAe,EAAE;MACnBK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,eAAe,CAACO,IAAI,CAAC;IACpD,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD;EACF,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB,oBACEH,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAAW,QAAA,GAAG,oBAAkB,EAACR,eAAe,GAAG,eAAe,GAAGA,eAAe,CAACO,IAAI,GAAG,cAAc;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAEV;AAACb,EAAA,CAjBQD,eAAe;EAAA,QACwEH,YAAY;AAAA;AAAAkB,EAAA,GADnGf,eAAe;AAmBxB,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}