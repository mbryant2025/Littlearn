{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */ /*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/export var toolbox={'kind':'categoryToolbox','contents':[{'kind':'category','name':'I/O','categorystyle':'text_category','contents':[{'kind':'block','type':'print','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':0}}}}},{'kind':'block','type':'sevenseg','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':1234}}}}},{'kind':'block','type':'button','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':1}}}}},{'kind':'block','type':'switch','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':2}}}}},{'kind':'block','type':'beam','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':3}}}}},{'kind':'block','type':'motion','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':4}}}}},{'kind':'block','type':'fan','inputs':{'PORT':{'shadow':{'type':'math_number','fields':{'NUM':0}}},'VALUE':{'shadow':{'type':'math_number','fields':{'NUM':0}}}}},{'kind':'block','type':'LED','inputs':{'PORT':{'shadow':{'type':'math_number','fields':{'NUM':0}}},'VALUE':{'shadow':{'type':'math_number','fields':{'NUM':0}}}}}]},{'kind':'category','name':'Control','categorystyle':'text_category','contents':[{'kind':'block','type':'if','inputs':{'CONDITION':{'type':'math_number','fields':{'NUM':9}},'DO':{'type':'statement'}}},{'kind':'block','type':'while','inputs':{'CONDITION':{'type':'math_number','fields':{'NUM':9}},'DO':{'type':'statement'}}},{'kind':'block','type':'wait','inputs':{'TEXT':{'shadow':{'type':'math_number','fields':{'NUM':500}}}}}]},{'kind':'category','name':'Math','categorystyle':'text_category','contents':[{'kind':'block','type':'math_number','fields':{'NUM':123}},{'kind':'block','type':'binaryOp'},{'kind':'block','type':'math_modulo','inputs':{'DIVIDEND':{'shadow':{'type':'math_number','fields':{'NUM':64}}},'DIVISOR':{'shadow':{'type':'math_number','fields':{'NUM':10}}}}}]},{'kind':'category','name':'Variables','categorystyle':'text_category','contents':[{'kind':'button','text':'Create New Variable','callbackKey':'CREATE_INT_VARIABLE'},{'kind':'block','type':'int_var_declaration'},{'kind':'block','type':'float_var_declaration'},{'kind':'block','type':'use_variable'// Add the 'use_variable' block to the toolbox\n},{'kind':'block','type':'assign_variable'}]}]};","map":{"version":3,"names":["toolbox"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/toolbox.js"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\nThis toolbox contains nearly every single built-in block that Blockly offers,\nin addition to the custom block 'add_text' this sample app adds.\nYou probably don't need every single block, and should consider either rewriting\nyour toolbox from scratch, or carefully choosing whether you need each block\nlisted here.\n*/\n\nexport const toolbox = {\n    'kind': 'categoryToolbox',\n    'contents': [\n      {\n        'kind': 'category',\n        'name': 'I/O',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'print',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'sevenseg',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1234,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'button',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 1,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'switch',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 2,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'beam',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 3,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'motion',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 4,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'fan',\n            'inputs': {\n              'PORT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n              'VALUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'LED',\n            'inputs': {\n              'PORT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n              'VALUE': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 0,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Control',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'if',\n            'inputs': {\n              'CONDITION': {\n                'type': 'math_number',\n                'fields': {\n                  'NUM': 9,\n                },\n              },\n              'DO': {\n                'type': 'statement',\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'while',\n            'inputs': {\n              'CONDITION': {\n                'type': 'math_number',\n                'fields': {\n                  'NUM': 9,\n                },\n              },\n              'DO': {\n                'type': 'statement',\n              },\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'wait',\n            'inputs': {\n              'TEXT': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 500,\n                  },\n                },\n              },\n            },\n          },\n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Math',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'block',\n            'type': 'math_number',\n            'fields': {\n              'NUM': 123,\n            },\n          },\n          {\n            'kind': 'block',\n            'type': 'binaryOp',\n          },\n          {\n            'kind': 'block',\n            'type': 'math_modulo',\n            'inputs': {\n              'DIVIDEND': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 64,\n                  },\n                },\n              },\n              'DIVISOR': {\n                'shadow': {\n                  'type': 'math_number',\n                  'fields': {\n                    'NUM': 10,\n                  },\n                },\n              },\n            },\n          },\n         \n        ],\n      },\n      {\n        'kind': 'category',\n        'name': 'Variables',\n        'categorystyle': 'text_category',\n        'contents': [\n          {\n            'kind': 'button',\n            'text': 'Create New Variable',\n            'callbackKey': 'CREATE_INT_VARIABLE',\n          },\n          {\n            'kind': 'block',\n            'type': 'int_var_declaration',\n          },\n          {\n            'kind': 'block',\n            'type': 'float_var_declaration',\n          },\n          {\n            'kind': 'block',\n            'type': 'use_variable', // Add the 'use_variable' block to the toolbox\n          },\n          {\n            'kind': 'block',\n            'type': 'assign_variable',\n          },\n        ]\n      }\n    ],\n  };\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}