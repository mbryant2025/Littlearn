{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/web/src/BluetoothContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BluetoothContext = /*#__PURE__*/createContext(undefined);\nconst PrintFlag = '__P__';\nconst PrintFlagLength = PrintFlag.length;\nconst ErrorFlag = '__ER__';\nconst ErrorFlagLength = ErrorFlag.length;\nconst ScriptSentFlag = '__SS__';\nfunction uuid_bytes_to_string(uuid) {\n  // Assumes LSB first\n  const uuid_str = uuid.reverse().map(byte => byte.toString(16).padStart(2, '0')).join('');\n  return [uuid_str.slice(0, 8), uuid_str.slice(8, 12), uuid_str.slice(12, 16), uuid_str.slice(16, 20), uuid_str.slice(20)].join('-');\n}\nconst SERVICE_UUID = uuid_bytes_to_string([0xfb, 0x34, 0x9b, 0x5f, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00]);\nconst CHARACTERISTIC_UUID = '0000ff01-0000-1000-8000-00805f9b34fb';\nexport const BluetoothProvider = ({\n  children\n}) => {\n  _s();\n  const [bluetoothDevice, setBluetoothDevice] = useState(null);\n  const [outputText, setOutputText] = useState('');\n\n  // For writing to the output text\n  const writeToOutput = useCallback(data => {\n    setOutputText(prevOutput => prevOutput + '\\n' + data);\n    console.log(\"Output: \" + data);\n  }, [setOutputText]);\n  const clearOutput = useCallback(() => {\n    setOutputText('');\n  }, [setOutputText]);\n  const handleDisconnected = useCallback(() => {\n    console.log('Disconnected from GATT server');\n    writeToOutput('Disconnected from Bluetooth device.\\n');\n    setBluetoothDevice(null);\n  }, [writeToOutput]);\n  useEffect(() => {\n    if (bluetoothDevice) {\n      bluetoothDevice.addEventListener('gattserverdisconnected', handleDisconnected);\n    }\n    return () => {\n      if (bluetoothDevice) {\n        bluetoothDevice.removeEventListener('gattserverdisconnected', handleDisconnected);\n      }\n    };\n  }, [bluetoothDevice, handleDisconnected]);\n  const connectToDevice = useCallback(async () => {\n    // ... (rest of the code remains the same)\n  }, [writeToOutput]);\n  const disconnectDevice = useCallback(async () => {\n    var _bluetoothDevice$gatt;\n    if (bluetoothDevice && (_bluetoothDevice$gatt = bluetoothDevice.gatt) !== null && _bluetoothDevice$gatt !== void 0 && _bluetoothDevice$gatt.connected) {\n      var _bluetoothDevice$gatt2;\n      (_bluetoothDevice$gatt2 = bluetoothDevice.gatt) === null || _bluetoothDevice$gatt2 === void 0 ? void 0 : _bluetoothDevice$gatt2.disconnect();\n      console.log('Disconnected');\n    }\n    console.log('Disconnected from:', bluetoothDevice === null || bluetoothDevice === void 0 ? void 0 : bluetoothDevice.name);\n    setBluetoothDevice(null);\n  }, [bluetoothDevice]);\n  const sendBluetoothData = useCallback(async data => {\n    // ... (rest of the code remains the same)\n  }, [bluetoothDevice]);\n  return /*#__PURE__*/_jsxDEV(BluetoothContext.Provider, {\n    value: {\n      bluetoothDevice,\n      outputText,\n      connectToDevice,\n      disconnectDevice,\n      sendBluetoothData,\n      writeToOutput,\n      clearOutput\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(BluetoothProvider, \"ieOBAKd5kofqMw0LbRPZ8jOz8Fs=\");\n_c = BluetoothProvider;\nexport const useBluetooth = () => {\n  _s2();\n  const context = useContext(BluetoothContext);\n  if (context === undefined) {\n    throw new Error('useBluetooth must be used within a BluetoothProvider');\n  }\n  return context;\n};\n_s2(useBluetooth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BluetoothProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","BluetoothContext","undefined","PrintFlag","PrintFlagLength","length","ErrorFlag","ErrorFlagLength","ScriptSentFlag","uuid_bytes_to_string","uuid","uuid_str","reverse","map","byte","toString","padStart","join","slice","SERVICE_UUID","CHARACTERISTIC_UUID","BluetoothProvider","children","_s","bluetoothDevice","setBluetoothDevice","outputText","setOutputText","writeToOutput","data","prevOutput","console","log","clearOutput","handleDisconnected","addEventListener","removeEventListener","connectToDevice","disconnectDevice","_bluetoothDevice$gatt","gatt","connected","_bluetoothDevice$gatt2","disconnect","name","sendBluetoothData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBluetooth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/web/src/BluetoothContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, ReactNode, useEffect } from 'react';\n\ninterface BluetoothContextProps {\n  bluetoothDevice: BluetoothDevice | null;\n  outputText: string;\n  connectToDevice: () => Promise<void>;\n  disconnectDevice: () => Promise<void>;\n  sendBluetoothData: (data: string) => Promise<void>;\n  writeToOutput: (data: string) => void;\n  clearOutput: () => void;\n}\n\nconst BluetoothContext = createContext<BluetoothContextProps | undefined>(undefined);\n\nconst PrintFlag = '__P__';\nconst PrintFlagLength = PrintFlag.length;\n\nconst ErrorFlag = '__ER__';\nconst ErrorFlagLength = ErrorFlag.length;\n\nconst ScriptSentFlag = '__SS__';\n\nfunction uuid_bytes_to_string(uuid: number[]): string {\n  // Assumes LSB first\n  const uuid_str = uuid.reverse().map(byte => byte.toString(16).padStart(2, '0')).join('');\n  return [\n    uuid_str.slice(0, 8),\n    uuid_str.slice(8, 12),\n    uuid_str.slice(12, 16),\n    uuid_str.slice(16, 20),\n    uuid_str.slice(20),\n  ].join('-');\n}\n\nconst SERVICE_UUID = uuid_bytes_to_string([\n  0xfb, 0x34, 0x9b, 0x5f, 0x80, 0x00, 0x00, 0x80,\n  0x00, 0x10, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,\n]);\n\nconst CHARACTERISTIC_UUID = '0000ff01-0000-1000-8000-00805f9b34fb';\n\ninterface BluetoothProviderProps {\n  children: ReactNode;\n}\n\nexport const BluetoothProvider: React.FC<BluetoothProviderProps> = ({ children }) => {\n  const [bluetoothDevice, setBluetoothDevice] = useState<BluetoothDevice | null>(null);\n  const [outputText, setOutputText] = useState<string>('');\n\n  // For writing to the output text\n  const writeToOutput = useCallback((data: string) => {\n    setOutputText((prevOutput) => prevOutput + '\\n' + data);\n    console.log(\"Output: \" + data);\n  }, [setOutputText]);\n\n  const clearOutput = useCallback(() => {\n    setOutputText('');\n  }, [setOutputText]);\n\n  const handleDisconnected = useCallback(() => {\n    console.log('Disconnected from GATT server');\n    writeToOutput('Disconnected from Bluetooth device.\\n');\n    setBluetoothDevice(null);\n  }, [writeToOutput]);\n\n  useEffect(() => {\n    if (bluetoothDevice) {\n      bluetoothDevice.addEventListener('gattserverdisconnected', handleDisconnected);\n    }\n\n    return () => {\n      if (bluetoothDevice) {\n        bluetoothDevice.removeEventListener('gattserverdisconnected', handleDisconnected);\n      }\n    };\n  }, [bluetoothDevice, handleDisconnected]);\n\n  const connectToDevice = useCallback(async () => {\n    // ... (rest of the code remains the same)\n  }, [writeToOutput]);\n\n  const disconnectDevice = useCallback(async () => {\n    if (bluetoothDevice && bluetoothDevice.gatt?.connected) {\n      bluetoothDevice.gatt?.disconnect();\n      console.log('Disconnected');\n    }\n\n    console.log('Disconnected from:', bluetoothDevice?.name);\n\n    setBluetoothDevice(null);\n  }, [bluetoothDevice]);\n\n  const sendBluetoothData = useCallback(async (data: string) => {\n    // ... (rest of the code remains the same)\n  }, [bluetoothDevice]);\n\n  return (\n    <BluetoothContext.Provider\n      value={{\n        bluetoothDevice,\n        outputText,\n        connectToDevice,\n        disconnectDevice,\n        sendBluetoothData,\n        writeToOutput,\n        clearOutput,\n      }}\n    >\n      {children}\n    </BluetoothContext.Provider>\n  );\n};\n\nexport const useBluetooth = (): BluetoothContextProps => {\n  const context = useContext(BluetoothContext);\n  if (context === undefined) {\n    throw new Error('useBluetooth must be used within a BluetoothProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}