{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport './styles/Console.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BluetoothConsole() {\n  _s();\n  const {\n    bluetoothDevice,\n    outputText,\n    clearOutput\n  } = useBluetooth();\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: outputText.split('\\n').map((line, i) => {\n        const className = line.indexOf('Error') !== -1 ? 'error' : '';\n        const formattedLine = line.replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          children: formattedLine\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: clearOutput,\n      className: \"clear-button\",\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(BluetoothConsole, \"r75YZoioMhk7MpwIvIeMKKKiJtY=\", false, function () {\n  return [useBluetooth];\n});\n_c = BluetoothConsole;\nexport default BluetoothConsole;\nvar _c;\n$RefreshReg$(_c, \"BluetoothConsole\");","map":{"version":3,"names":["React","useEffect","useBluetooth","jsxDEV","_jsxDEV","BluetoothConsole","_s","bluetoothDevice","outputText","clearOutput","console","log","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","line","i","indexOf","formattedLine","replace","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport './styles/Console.css';\n\nfunction BluetoothConsole() {\n    const { bluetoothDevice, outputText, clearOutput } = useBluetooth();\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice]);\n\n    return (\n        <div className=\"console\">\n            <div className=\"title\">Console</div>\n            {/* This is to display output text while keeping newlines */}\n            <div>\n                {outputText.split('\\n').map((line, i) => {\n                    const className = line.indexOf('Error') !== -1 ? 'error' : '';\n                    const formattedLine = line.replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n                    return <div key={i} className={className}>{formattedLine}</div>\n                })}\n            </div>\n\n            <div onClick={clearOutput} className=\"clear-button\">Clear</div>\n\n\n        </div>\n    );\n}\n\nexport default BluetoothConsole;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC,eAAe;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGP,YAAY,CAAC,CAAC;EAEnED,SAAS,CAAC,MAAM;IACZ,IAAIM,eAAe,EAAE;MACjBG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,eAAe,CAACK,IAAI,CAAC;IACtD,CAAC,MAAM;MACHF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACzD;EACJ,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;EAErB,oBACIH,OAAA;IAAKS,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBV,OAAA;MAAKS,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEpCd,OAAA;MAAAU,QAAA,EACKN,UAAU,CAACW,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACrC,MAAMT,SAAS,GAAGQ,IAAI,CAACE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE;QAC7D,MAAMC,aAAa,GAAGH,IAAI,CAACI,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;QACtE,oBAAOrB,OAAA;UAAaS,SAAS,EAAEA,SAAU;UAAAC,QAAA,EAAEU;QAAa,GAAvCF,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4C,CAAC;MACnE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENd,OAAA;MAAKsB,OAAO,EAAEjB,WAAY;MAACI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9D,CAAC;AAEd;AAACZ,EAAA,CA5BQD,gBAAgB;EAAA,QACgCH,YAAY;AAAA;AAAAyB,EAAA,GAD5DtB,gBAAgB;AA8BzB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}