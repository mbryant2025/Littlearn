{"ast":null,"code":"import React,{useEffect}from'react';import{useBluetooth}from'../BluetoothContext';import'./styles/Console.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BluetoothConsole(){var _useBluetooth=useBluetooth(),bluetoothDevice=_useBluetooth.bluetoothDevice,outputText=_useBluetooth.outputText,clearOutput=_useBluetooth.clearOutput;useEffect(function(){if(bluetoothDevice){console.log('Connected to:',bluetoothDevice.name);}else{console.log('Not connected to any Bluetooth device.');}},[bluetoothDevice]);return/*#__PURE__*/_jsxs(\"div\",{className:\"console\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Console\"}),/*#__PURE__*/_jsx(\"div\",{onClick:clearOutput,className:\"clear-button\",children:\"Clear\"}),/*#__PURE__*/_jsx(\"div\",{children:outputText.split('\\n').map(function(line,i){var className=line.indexOf('Error')!==-1?'error':'';var formattedLine=line.replace(/&gt;/g,'>').replace(/&lt;/g,'<');return/*#__PURE__*/_jsx(\"div\",{className:className,children:formattedLine},i);})})]});}export default BluetoothConsole;","map":{"version":3,"names":["React","useEffect","useBluetooth","jsx","_jsx","jsxs","_jsxs","BluetoothConsole","_useBluetooth","bluetoothDevice","outputText","clearOutput","console","log","name","className","children","onClick","split","map","line","i","indexOf","formattedLine","replace"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/BluetoothConsole.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport './styles/Console.css';\n\nfunction BluetoothConsole() {\n    const { bluetoothDevice, outputText, clearOutput } = useBluetooth();\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice]);\n\n    return (\n        <div className=\"console\">\n            <div className=\"title\">Console</div>\n            <div onClick={clearOutput} className=\"clear-button\">\n                Clear\n            </div>\n            {/* This is to display output text while keeping newlines */}\n            <div>\n                {outputText.split('\\n').map((line, i) => {\n                    const className = line.indexOf('Error') !== -1 ? 'error' : '';\n                    const formattedLine = line.replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n                    return <div key={i} className={className}>{formattedLine}</div>\n                })}\n            </div>\n\n            \n\n\n        </div>\n    );\n}\n\nexport default BluetoothConsole;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,YAAY,KAAQ,qBAAqB,CAClD,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACxB,IAAAC,aAAA,CAAqDN,YAAY,CAAC,CAAC,CAA3DO,eAAe,CAAAD,aAAA,CAAfC,eAAe,CAAEC,UAAU,CAAAF,aAAA,CAAVE,UAAU,CAAEC,WAAW,CAAAH,aAAA,CAAXG,WAAW,CAEhDV,SAAS,CAAC,UAAM,CACZ,GAAIQ,eAAe,CAAE,CACjBG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEJ,eAAe,CAACK,IAAI,CAAC,CACtD,CAAC,IAAM,CACHF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CACzD,CACJ,CAAC,CAAE,CAACJ,eAAe,CAAC,CAAC,CAErB,mBACIH,KAAA,QAAKS,SAAS,CAAC,SAAS,CAAAC,QAAA,eACpBZ,IAAA,QAAKW,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cACpCZ,IAAA,QAAKa,OAAO,CAAEN,WAAY,CAACI,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAEpD,CAAK,CAAC,cAENZ,IAAA,QAAAY,QAAA,CACKN,UAAU,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,SAACC,IAAI,CAAEC,CAAC,CAAK,CACrC,GAAM,CAAAN,SAAS,CAAGK,IAAI,CAACE,OAAO,CAAC,OAAO,CAAC,GAAK,CAAC,CAAC,CAAG,OAAO,CAAG,EAAE,CAC7D,GAAM,CAAAC,aAAa,CAAGH,IAAI,CAACI,OAAO,CAAC,OAAO,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,CAAE,GAAG,CAAC,CACtE,mBAAOpB,IAAA,QAAaW,SAAS,CAAEA,SAAU,CAAAC,QAAA,CAAEO,aAAa,EAAvCF,CAA6C,CAAC,CACnE,CAAC,CAAC,CACD,CAAC,EAKL,CAAC,CAEd,CAEA,cAAe,CAAAd,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}