{"ast":null,"code":"'use strict';\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden level identifier\n * to allow the readable level property to be mutable for\n * operations like colorization\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'LEVEL', {\n  value: Symbol.for('level')\n});\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden message identifier\n * to allow the final message property to not have\n * side effects on another.\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'MESSAGE', {\n  value: Symbol.for('message')\n});\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden message identifier\n * to allow the extracted splat property be hidden\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'SPLAT', {\n  value: Symbol.for('splat')\n});\n\n/**\n * A shareable object constant  that can be used\n * as a standard configuration for winston@3.\n *\n * @type {Object}\n */\nObject.defineProperty(exports, 'configs', {\n  value: require('./config')\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","Symbol","for","require"],"sources":["/Users/michaelbryant/node_modules/triple-beam/index.js"],"sourcesContent":["'use strict';\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden level identifier\n * to allow the readable level property to be mutable for\n * operations like colorization\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'LEVEL', {\n  value: Symbol.for('level')\n});\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden message identifier\n * to allow the final message property to not have\n * side effects on another.\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'MESSAGE', {\n  value: Symbol.for('message')\n});\n\n/**\n * A shareable symbol constant that can be used\n * as a non-enumerable / semi-hidden message identifier\n * to allow the extracted splat property be hidden\n *\n * @type {Symbol}\n */\nObject.defineProperty(exports, 'SPLAT', {\n  value: Symbol.for('splat')\n});\n\n/**\n * A shareable object constant  that can be used\n * as a standard configuration for winston@3.\n *\n * @type {Object}\n */\nObject.defineProperty(exports, 'configs', {\n  value: require('./config')\n});\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EACtCC,KAAK,EAAEC,MAAM,CAACC,GAAG,CAAC,OAAO;AAC3B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACxCC,KAAK,EAAEC,MAAM,CAACC,GAAG,CAAC,SAAS;AAC7B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EACtCC,KAAK,EAAEC,MAAM,CAACC,GAAG,CAAC,OAAO;AAC3B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACAL,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACxCC,KAAK,EAAEG,OAAO,CAAC,UAAU;AAC3B,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}