{"ast":null,"code":"'use strict';\n\nconst util = require('util');\nconst {\n  LEVEL\n} = require('triple-beam');\nconst TransportStream = require('./modern');\n\n/**\n * Constructor function for the LegacyTransportStream. This is an internal\n * wrapper `winston >= 3` uses to wrap older transports implementing\n * log(level, message, meta).\n * @param {Object} options - Options for this TransportStream instance.\n * @param {Transpot} options.transport - winston@2 or older Transport to wrap.\n */\n\nconst LegacyTransportStream = module.exports = function LegacyTransportStream(options = {}) {\n  TransportStream.call(this, options);\n  if (!options.transport || typeof options.transport.log !== 'function') {\n    throw new Error('Invalid transport, must be an object with a log method.');\n  }\n  this.transport = options.transport;\n  this.level = this.level || options.transport.level;\n  this.handleExceptions = this.handleExceptions || options.transport.handleExceptions;\n\n  // Display our deprecation notice.\n  this._deprecated();\n\n  // Properly bubble up errors from the transport to the\n  // LegacyTransportStream instance, but only once no matter how many times\n  // this transport is shared.\n  function transportError(err) {\n    this.emit('error', err, this.transport);\n  }\n  if (!this.transport.__winstonError) {\n    this.transport.__winstonError = transportError.bind(this);\n    this.transport.on('error', this.transport.__winstonError);\n  }\n};\n\n/*\n * Inherit from TransportStream using Node.js built-ins\n */\nutil.inherits(LegacyTransportStream, TransportStream);\n\n/**\n * Writes the info object to our transport instance.\n * @param {mixed} info - TODO: add param description.\n * @param {mixed} enc - TODO: add param description.\n * @param {function} callback - TODO: add param description.\n * @returns {undefined}\n * @private\n */\nLegacyTransportStream.prototype._write = function _write(info, enc, callback) {\n  if (this.silent || info.exception === true && !this.handleExceptions) {\n    return callback(null);\n  }\n\n  // Remark: This has to be handled in the base transport now because we\n  // cannot conditionally write to our pipe targets as stream.\n  if (!this.level || this.levels[this.level] >= this.levels[info[LEVEL]]) {\n    this.transport.log(info[LEVEL], info.message, info, this._nop);\n  }\n  callback(null);\n};\n\n/**\n * Writes the batch of info objects (i.e. \"object chunks\") to our transport\n * instance after performing any necessary filtering.\n * @param {mixed} chunks - TODO: add params description.\n * @param {function} callback - TODO: add params description.\n * @returns {mixed} - TODO: add returns description.\n * @private\n */\nLegacyTransportStream.prototype._writev = function _writev(chunks, callback) {\n  for (let i = 0; i < chunks.length; i++) {\n    if (this._accept(chunks[i])) {\n      this.transport.log(chunks[i].chunk[LEVEL], chunks[i].chunk.message, chunks[i].chunk, this._nop);\n      chunks[i].callback();\n    }\n  }\n  return callback(null);\n};\n\n/**\n * Displays a deprecation notice. Defined as a function so it can be\n * overriden in tests.\n * @returns {undefined}\n */\nLegacyTransportStream.prototype._deprecated = function _deprecated() {\n  // eslint-disable-next-line no-console\n  console.error([`${this.transport.name} is a legacy winston transport. Consider upgrading: `, '- Upgrade docs: https://github.com/winstonjs/winston/blob/master/UPGRADE-3.0.md'].join('\\n'));\n};\n\n/**\n * Clean up error handling state on the legacy transport associated\n * with this instance.\n * @returns {undefined}\n */\nLegacyTransportStream.prototype.close = function close() {\n  if (this.transport.close) {\n    this.transport.close();\n  }\n  if (this.transport.__winstonError) {\n    this.transport.removeListener('error', this.transport.__winstonError);\n    this.transport.__winstonError = null;\n  }\n};","map":{"version":3,"names":["util","require","LEVEL","TransportStream","LegacyTransportStream","module","exports","options","call","transport","log","Error","level","handleExceptions","_deprecated","transportError","err","emit","__winstonError","bind","on","inherits","prototype","_write","info","enc","callback","silent","exception","levels","message","_nop","_writev","chunks","i","length","_accept","chunk","console","error","name","join","close","removeListener"],"sources":["/Users/michaelbryant/node_modules/winston-transport/legacy.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst { LEVEL } = require('triple-beam');\nconst TransportStream = require('./modern');\n\n/**\n * Constructor function for the LegacyTransportStream. This is an internal\n * wrapper `winston >= 3` uses to wrap older transports implementing\n * log(level, message, meta).\n * @param {Object} options - Options for this TransportStream instance.\n * @param {Transpot} options.transport - winston@2 or older Transport to wrap.\n */\n\nconst LegacyTransportStream = module.exports = function LegacyTransportStream(options = {}) {\n  TransportStream.call(this, options);\n  if (!options.transport || typeof options.transport.log !== 'function') {\n    throw new Error('Invalid transport, must be an object with a log method.');\n  }\n\n  this.transport = options.transport;\n  this.level = this.level || options.transport.level;\n  this.handleExceptions = this.handleExceptions || options.transport.handleExceptions;\n\n  // Display our deprecation notice.\n  this._deprecated();\n\n  // Properly bubble up errors from the transport to the\n  // LegacyTransportStream instance, but only once no matter how many times\n  // this transport is shared.\n  function transportError(err) {\n    this.emit('error', err, this.transport);\n  }\n\n  if (!this.transport.__winstonError) {\n    this.transport.__winstonError = transportError.bind(this);\n    this.transport.on('error', this.transport.__winstonError);\n  }\n};\n\n/*\n * Inherit from TransportStream using Node.js built-ins\n */\nutil.inherits(LegacyTransportStream, TransportStream);\n\n/**\n * Writes the info object to our transport instance.\n * @param {mixed} info - TODO: add param description.\n * @param {mixed} enc - TODO: add param description.\n * @param {function} callback - TODO: add param description.\n * @returns {undefined}\n * @private\n */\nLegacyTransportStream.prototype._write = function _write(info, enc, callback) {\n  if (this.silent || (info.exception === true && !this.handleExceptions)) {\n    return callback(null);\n  }\n\n  // Remark: This has to be handled in the base transport now because we\n  // cannot conditionally write to our pipe targets as stream.\n  if (!this.level || this.levels[this.level] >= this.levels[info[LEVEL]]) {\n    this.transport.log(info[LEVEL], info.message, info, this._nop);\n  }\n\n  callback(null);\n};\n\n/**\n * Writes the batch of info objects (i.e. \"object chunks\") to our transport\n * instance after performing any necessary filtering.\n * @param {mixed} chunks - TODO: add params description.\n * @param {function} callback - TODO: add params description.\n * @returns {mixed} - TODO: add returns description.\n * @private\n */\nLegacyTransportStream.prototype._writev = function _writev(chunks, callback) {\n  for (let i = 0; i < chunks.length; i++) {\n    if (this._accept(chunks[i])) {\n      this.transport.log(\n        chunks[i].chunk[LEVEL],\n        chunks[i].chunk.message,\n        chunks[i].chunk,\n        this._nop\n      );\n      chunks[i].callback();\n    }\n  }\n\n  return callback(null);\n};\n\n/**\n * Displays a deprecation notice. Defined as a function so it can be\n * overriden in tests.\n * @returns {undefined}\n */\nLegacyTransportStream.prototype._deprecated = function _deprecated() {\n  // eslint-disable-next-line no-console\n  console.error([\n    `${this.transport.name} is a legacy winston transport. Consider upgrading: `,\n    '- Upgrade docs: https://github.com/winstonjs/winston/blob/master/UPGRADE-3.0.md'\n  ].join('\\n'));\n};\n\n/**\n * Clean up error handling state on the legacy transport associated\n * with this instance.\n * @returns {undefined}\n */\nLegacyTransportStream.prototype.close = function close() {\n  if (this.transport.close) {\n    this.transport.close();\n  }\n\n  if (this.transport.__winstonError) {\n    this.transport.removeListener('error', this.transport.__winstonError);\n    this.transport.__winstonError = null;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}