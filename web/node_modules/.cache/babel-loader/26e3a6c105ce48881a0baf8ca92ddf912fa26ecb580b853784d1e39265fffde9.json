{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport BluetoothConsole from './BluetoothConsole';\nimport TextCode from './TextCode';\nimport LeftBar from './LeftBar';\nimport './styles/WindowManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WindowManager() {\n  _s();\n  const [isConsoleVisible, setConsoleVisibility] = useState(false);\n  const [isTextCodeVisible, setTextCodeVisibility] = useState(true);\n  const reloadBlockly = () => {};\n  const toggleConsoleVisibility = () => {\n    setConsoleVisibility(!isConsoleVisible);\n    reloadBlockly();\n  };\n  const toggleTextCodeVisibility = () => {\n    setTextCodeVisibility(!isTextCodeVisible);\n    reloadBlockly();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-divider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-bar\",\n        children: /*#__PURE__*/_jsxDEV(LeftBar, {\n          toggleConsoleVisibility: toggleConsoleVisibility,\n          toggleTextCodeVisibility: toggleTextCodeVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `main-area ${isConsoleVisible || isTextCodeVisible ? 'show-right-column' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blockly-area\",\n          children: /*#__PURE__*/_jsxDEV(BlocklyComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), isConsoleVisible && isTextCodeVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-vertically\",\n          children: [/*#__PURE__*/_jsxDEV(TextCode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BluetoothConsole, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 63\n        }, this), isConsoleVisible && !isTextCodeVisible && /*#__PURE__*/_jsxDEV(BluetoothConsole, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 64\n        }, this), !isConsoleVisible && isTextCodeVisible && /*#__PURE__*/_jsxDEV(TextCode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(WindowManager, \"CpzZnkELpSyzt/S18p5cVpuhbUE=\");\n_c = WindowManager;\nexport default WindowManager;\n\n/*<div className=\"console-area\">\n                            <BluetoothConsole />\n                        </div>*/\nvar _c;\n$RefreshReg$(_c, \"WindowManager\");","map":{"version":3,"names":["React","useState","BlocklyComponent","BluetoothConsole","TextCode","LeftBar","jsxDEV","_jsxDEV","WindowManager","_s","isConsoleVisible","setConsoleVisibility","isTextCodeVisible","setTextCodeVisibility","reloadBlockly","toggleConsoleVisibility","toggleTextCodeVisibility","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/WindowManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BlocklyComponent from './Blockly';\nimport BluetoothConsole from './BluetoothConsole';\nimport TextCode from './TextCode';\nimport LeftBar from './LeftBar';\nimport './styles/WindowManager.css';\n\n\nfunction WindowManager() {\n    const [isConsoleVisible, setConsoleVisibility] = useState(false);\n    const [isTextCodeVisible, setTextCodeVisibility] = useState(true);\n\n    const reloadBlockly = () => {\n\n    }\n\n    const toggleConsoleVisibility = () => {\n        setConsoleVisibility(!isConsoleVisible);\n        reloadBlockly();\n    };\n\n    const toggleTextCodeVisibility = () => {\n        setTextCodeVisibility(!isTextCodeVisible);\n        reloadBlockly();\n    };\n\n    return (\n        <div>\n            <div className=\"main-divider\">\n                <div className=\"left-bar\">\n                    <LeftBar toggleConsoleVisibility={toggleConsoleVisibility} toggleTextCodeVisibility={toggleTextCodeVisibility} />\n                </div>\n                <div className={`main-area ${(isConsoleVisible || isTextCodeVisible) ? 'show-right-column' : ''}`}>\n                    <div className=\"blockly-area\">\n                        <BlocklyComponent />\n                    </div>\n\n\n                    {isConsoleVisible && isTextCodeVisible && <div className=\"split-vertically\">\n\n                        <TextCode />\n                        <BluetoothConsole />\n\n                    </div>}\n\n                    {isConsoleVisible && !isTextCodeVisible && <BluetoothConsole />}\n\n                    {!isConsoleVisible && isTextCodeVisible && <TextCode />}\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WindowManager;\n\n\n/*<div className=\"console-area\">\n                            <BluetoothConsole />\n                        </div>*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}