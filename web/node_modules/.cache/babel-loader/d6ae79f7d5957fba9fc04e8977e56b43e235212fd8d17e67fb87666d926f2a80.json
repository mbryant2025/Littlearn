{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/TextCode.tsx\",\n  _s = $RefreshSig$();\n// import './styles/Console.css';\n// import { useGeneratedCode } from '../GeneratedCodeContext';\n\n// function TextCode() {\n\n//     const { generatedCode } = useGeneratedCode();\n\n//     return (\n//         <div className=\"console\">\n//             <div className=\"title\">Generated Code</div>\n//             <div className=\"code\" dangerouslySetInnerHTML={{ __html: generatedCode }} />\n//         </div>\n//     );\n// }\n\n// export default TextCode;\n\nimport './styles/Console.css';\nimport { useGeneratedCode } from '../GeneratedCodeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextCode() {\n  _s();\n  const {\n    generatedCode\n  } = useGeneratedCode();\n\n  // Function to replace tabs with HTML entity representation for indentation\n  const formatCode = code => {\n    return code.replace(/\\t/g, '\\u00A0\\u00A0\\u00A0\\u00A0'); // Replace tabs with 4 spaces\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Generated Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"code\",\n      children: formatCode(generatedCode)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TextCode, \"aWiKv8BTBS/U//1mqWruKe1x0rY=\", false, function () {\n  return [useGeneratedCode];\n});\n_c = TextCode;\nexport default TextCode;\nvar _c;\n$RefreshReg$(_c, \"TextCode\");","map":{"version":3,"names":["useGeneratedCode","jsxDEV","_jsxDEV","TextCode","_s","generatedCode","formatCode","code","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/components/TextCode.tsx"],"sourcesContent":["// import './styles/Console.css';\n// import { useGeneratedCode } from '../GeneratedCodeContext';\n\n// function TextCode() {\n\n//     const { generatedCode } = useGeneratedCode();\n\n//     return (\n//         <div className=\"console\">\n//             <div className=\"title\">Generated Code</div>\n//             <div className=\"code\" dangerouslySetInnerHTML={{ __html: generatedCode }} />\n//         </div>\n//     );\n// }\n\n// export default TextCode;\n\nimport './styles/Console.css';\nimport { useGeneratedCode } from '../GeneratedCodeContext';\n\nfunction TextCode() {\n    const { generatedCode } = useGeneratedCode();\n\n    // Function to replace tabs with HTML entity representation for indentation\n    const formatCode = (code) => {\n        return code.replace(/\\t/g, '\\u00A0\\u00A0\\u00A0\\u00A0'); // Replace tabs with 4 spaces\n    };\n\n    return (\n        <div className=\"console\">\n            <div className=\"title\">Generated Code</div>\n            <pre className=\"code\">{formatCode(generatedCode)}</pre>\n        </div>\n    );\n}\n\nexport default TextCode;\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,sBAAsB;AAC7B,SAASA,gBAAgB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAc,CAAC,GAAGL,gBAAgB,CAAC,CAAC;;EAE5C;EACA,MAAMM,UAAU,GAAIC,IAAI,IAAK;IACzB,OAAOA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC,CAAC;EAC5D,CAAC;;EAED,oBACIN,OAAA;IAAKO,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBR,OAAA;MAAKO,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3CZ,OAAA;MAAKO,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEJ,UAAU,CAACD,aAAa;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd;AAACV,EAAA,CAdQD,QAAQ;EAAA,QACaH,gBAAgB;AAAA;AAAAe,EAAA,GADrCZ,QAAQ;AAgBjB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}