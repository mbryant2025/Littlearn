{"ast":null,"code":"var _jsxFileName = \"/Users/michaelbryant/Desktop/Littlearn/web/src/components/LeftBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport { SendScript } from '../SendScript';\nimport './styles/LeftBar.css';\nimport { useGeneratedCode } from '../GeneratedCodeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeftBar = ({\n  toggleConsoleVisibility,\n  toggleTextCodeVisibility\n}) => {\n  _s();\n  const {\n    bluetoothDevice,\n    connectToDevice,\n    disconnectDevice,\n    writeToOutput\n  } = useBluetooth();\n  const {\n    generatedCode\n  } = useGeneratedCode();\n  const handleConnect = async () => {\n    try {\n      await connectToDevice();\n    } catch (error) {\n      console.error('Error connecting to Bluetooth device:', error);\n    }\n  };\n  const handleDisconnect = async () => {\n    try {\n      await disconnectDevice();\n    } catch (error) {\n      console.error('Error disconnecting from Bluetooth device:', error);\n    }\n  };\n  const sendScript = SendScript();\n  const uploadBlockly = async () => {\n    try {\n      const code = generatedCode.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/<br>/g, '\\n');\n      const script = \"__SD__{\" + code + \"}__SD__\"; // wrap in curly braces to make it a script per the interpreter\n      const response = await sendScript.sendData(script);\n      writeToOutput('Uploading code.\\n');\n      console.log('Upload Blockly success:', response);\n    } catch (error) {\n      console.error('Error during code upload:', error);\n      writeToOutput('Error during code upload.\\n');\n    }\n  };\n  useEffect(() => {\n    if (bluetoothDevice) {\n      console.log('Connected to:', bluetoothDevice.name);\n    } else {\n      console.log('Not connected to any Bluetooth device.');\n    }\n  }, [bluetoothDevice, writeToOutput]);\n  const warnNeedConnect = () => {\n    if (!bluetoothDevice) {\n      alert(\"Please connect to device first!\");\n      return true;\n    }\n    return false;\n  };\n\n  // Prompt the user for text input\n  // TEMP TODO REMOVE\n  const uploadText = async () => {\n    const text = prompt(\"Please enter your text\");\n    try {\n      if (!text) {\n        return;\n      }\n      const code = text.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/<br>/g, '\\n');\n      const script = \"__SD__{\" + code + \"}__SD__\"; // wrap in curly braces to make it a script per the interpreter\n      const response = await sendScript.sendData(script);\n      writeToOutput('Uploading code.\\n');\n      console.log('Upload Blockly success:', response);\n    } catch (error) {\n      console.error('Error during code upload:', error);\n      writeToOutput('Error during code upload.\\n');\n    }\n  };\n  const buttons = [{\n    imgSrc: './ble.png',\n    alt: 'BLE',\n    text: bluetoothDevice ? 'Disconnect' : 'Connect',\n    onClick: bluetoothDevice ? handleDisconnect : handleConnect\n  }, {\n    imgSrc: './upload.png',\n    alt: 'Upload',\n    text: 'Upload Code',\n    onClick: bluetoothDevice ? uploadBlockly : warnNeedConnect\n  }, {\n    imgSrc: './text.png',\n    alt: 'Console',\n    text: 'Show Text Code',\n    onClick: toggleTextCodeVisibility\n  }, {\n    imgSrc: './console.png',\n    alt: 'Console',\n    text: 'Show Console',\n    onClick: toggleConsoleVisibility\n  }, {\n    imgSrc: './upload.png',\n    alt: 'Upload',\n    text: 'TEMP',\n    onClick: bluetoothDevice ? uploadText : warnNeedConnect\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: \"Electro-Tiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      onClick: button.onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: button.imgSrc,\n        alt: button.alt,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), button.text]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(LeftBar, \"D35ZdqmRISOpZHBpWViEyQQJjYw=\", false, function () {\n  return [useBluetooth, useGeneratedCode];\n});\n_c = LeftBar;\nexport default LeftBar;\nvar _c;\n$RefreshReg$(_c, \"LeftBar\");","map":{"version":3,"names":["React","useEffect","useBluetooth","SendScript","useGeneratedCode","jsxDEV","_jsxDEV","LeftBar","toggleConsoleVisibility","toggleTextCodeVisibility","_s","bluetoothDevice","connectToDevice","disconnectDevice","writeToOutput","generatedCode","handleConnect","error","console","handleDisconnect","sendScript","uploadBlockly","code","replace","script","response","sendData","log","name","warnNeedConnect","alert","uploadText","text","prompt","buttons","imgSrc","alt","onClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","button","index","src","_c","$RefreshReg$"],"sources":["/Users/michaelbryant/Desktop/Littlearn/web/src/components/LeftBar.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useBluetooth } from '../BluetoothContext';\nimport { SendScript } from '../SendScript';\nimport './styles/LeftBar.css';\nimport { useGeneratedCode } from '../GeneratedCodeContext';\n\ninterface LeftBarProps {\n    toggleConsoleVisibility: () => void;\n    toggleTextCodeVisibility: () => void;\n}\n\nconst LeftBar: React.FC<LeftBarProps> = ({ toggleConsoleVisibility, toggleTextCodeVisibility }) => {\n\n    const { bluetoothDevice, connectToDevice, disconnectDevice, writeToOutput } = useBluetooth();\n    const { generatedCode } = useGeneratedCode();\n\n    const handleConnect = async () => {\n        try {\n            await connectToDevice();\n\n        } catch (error) {\n            console.error('Error connecting to Bluetooth device:', error);\n        }\n    };\n\n    const handleDisconnect = async () => {\n        try {\n            await disconnectDevice();\n        } catch (error) {\n            console.error('Error disconnecting from Bluetooth device:', error);\n        }\n    };\n\n    const sendScript = SendScript();\n\n    const uploadBlockly = async () => {\n        try {\n            const code = generatedCode.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/<br>/g, '\\n');\n            const script = \"__SD__{\" + code + \"}__SD__\"; // wrap in curly braces to make it a script per the interpreter\n            const response = await sendScript.sendData(script);\n            writeToOutput('Uploading code.\\n');\n\n            console.log('Upload Blockly success:', response);\n        } catch (error) {\n            console.error('Error during code upload:', error);\n            writeToOutput('Error during code upload.\\n');\n        }\n    };\n\n    useEffect(() => {\n        if (bluetoothDevice) {\n            console.log('Connected to:', bluetoothDevice.name);\n        } else {\n            console.log('Not connected to any Bluetooth device.');\n        }\n    }, [bluetoothDevice, writeToOutput]);\n\n    const warnNeedConnect = () => {\n        if (!bluetoothDevice) {\n            alert(\"Please connect to device first!\");\n            return true;\n        }\n        return false;\n    }\n\n    // Prompt the user for text input\n    // TEMP TODO REMOVE\n    const uploadText = async () => {\n        const text = prompt(\"Please enter your text\");\n        try {\n            if (!text) {\n                return;\n            }\n            const code = text.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/<br>/g, '\\n');\n            const script = \"__SD__{\" + code + \"}__SD__\"; // wrap in curly braces to make it a script per the interpreter\n            const response = await sendScript.sendData(script);\n            writeToOutput('Uploading code.\\n');\n\n            console.log('Upload Blockly success:', response);\n        } catch (error) {\n            console.error('Error during code upload:', error);\n            writeToOutput('Error during code upload.\\n');\n        }\n    }\n\n    const buttons = [\n        {\n            imgSrc: './ble.png',\n            alt: 'BLE',\n            text: bluetoothDevice ? 'Disconnect' : 'Connect',\n            onClick: bluetoothDevice ? handleDisconnect : handleConnect,\n        },\n        {\n            imgSrc: './upload.png',\n            alt: 'Upload',\n            text: 'Upload Code',\n            onClick: bluetoothDevice ? uploadBlockly : warnNeedConnect,\n        },\n        {\n            imgSrc: './text.png',\n            alt: 'Console',\n            text: 'Show Text Code',\n            onClick: toggleTextCodeVisibility,\n        },\n        {\n            imgSrc: './console.png',\n            alt: 'Console',\n            text: 'Show Console',\n            onClick: toggleConsoleVisibility,\n        },\n        {\n            imgSrc: './upload.png',\n            alt: 'Upload',\n            text: 'TEMP',\n            onClick: bluetoothDevice ? uploadText : warnNeedConnect,\n        },\n    ];\n\n\n    return (\n\n        <div>\n            <div className=\"logo\">Electro-Tiles</div>\n            {buttons.map((button, index) => (\n                <div key={index} className=\"button-container\" onClick={button.onClick}>\n                    <img src={button.imgSrc} alt={button.alt} className=\"icon\" />\n                    {button.text}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default LeftBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}