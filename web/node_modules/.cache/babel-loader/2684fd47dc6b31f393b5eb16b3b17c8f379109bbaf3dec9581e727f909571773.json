{"ast":null,"code":"'use strict';\n\n/***\n * Convert string to hex color.\n *\n * @param {String} str Text to hash and convert to hex.\n * @returns {String}\n * @api public\n */\nmodule.exports = function hex(str) {\n  for (var i = 0, hash = 0; i < str.length; hash = str.charCodeAt(i++) + ((hash << 5) - hash));\n  var color = Math.floor(Math.abs(Math.sin(hash) * 10000 % 1 * 16777216)).toString(16);\n  return '#' + Array(6 - color.length + 1).join('0') + color;\n};","map":{"version":3,"names":["module","exports","hex","str","i","hash","length","charCodeAt","color","Math","floor","abs","sin","toString","Array","join"],"sources":["/Users/michaelbryant/node_modules/text-hex/index.js"],"sourcesContent":["'use strict';\n\n/***\n * Convert string to hex color.\n *\n * @param {String} str Text to hash and convert to hex.\n * @returns {String}\n * @api public\n */\nmodule.exports = function hex(str) {\n  for (\n    var i = 0, hash = 0;\n    i < str.length;\n    hash = str.charCodeAt(i++) + ((hash << 5) - hash)\n  );\n\n  var color = Math.floor(\n    Math.abs(\n      (Math.sin(hash) * 10000) % 1 * 16777216\n    )\n  ).toString(16);\n\n  return '#' + Array(6 - color.length + 1).join('0') + color;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,GAAGA,CAACC,GAAG,EAAE;EACjC,KACE,IAAIC,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,EACnBD,CAAC,GAAGD,GAAG,CAACG,MAAM,EACdD,IAAI,GAAGF,GAAG,CAACI,UAAU,CAACH,CAAC,EAAE,CAAC,IAAI,CAACC,IAAI,IAAI,CAAC,IAAIA,IAAI,CAAC,CAClD;EAED,IAAIG,KAAK,GAAGC,IAAI,CAACC,KAAK,CACpBD,IAAI,CAACE,GAAG,CACLF,IAAI,CAACG,GAAG,CAACP,IAAI,CAAC,GAAG,KAAK,GAAI,CAAC,GAAG,QACjC,CACF,CAAC,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAEd,OAAO,GAAG,GAAGC,KAAK,CAAC,CAAC,GAAGN,KAAK,CAACF,MAAM,GAAG,CAAC,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC,GAAGP,KAAK;AAC5D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}