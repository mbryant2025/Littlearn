{"ast":null,"code":"import * as Blockly from 'blockly/core';\nconst button = {\n  'type': 'button',\n  'message0': 'get button on port %1',\n  'args0': [{\n    'type': 'input_value',\n    'name': 'TEXT',\n    'check': 'Number',\n    'value': 0 // default value\n  }],\n\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if button is pressed, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127\n};\nconst swtch = {\n  'type': 'switch',\n  'message0': 'get switch on port %1',\n  'args0': [{\n    'type': 'input_value',\n    'name': 'TEXT',\n    'check': 'Number'\n  }],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if switch is on, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127\n};\nconst motion = {\n  'type': 'motion',\n  'message0': 'get motion sensor on port %1',\n  'args0': [{\n    'type': 'input_value',\n    'name': 'TEXT',\n    'check': 'Number'\n  }],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if motion is detected, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127\n};\nconst beam = {\n  'type': 'beam',\n  'message0': 'get beam break sensor on port %1',\n  'args0': [{\n    'type': 'input_value',\n    'name': 'TEXT',\n    'check': 'Number'\n  }],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if motion is detected, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127\n};\nexport const readport = Blockly.common.createBlockDefinitionsFromJsonArray([button, swtch, motion, beam]);","map":{"version":3,"names":["Blockly","button","swtch","motion","beam","readport","common","createBlockDefinitionsFromJsonArray"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/readport.js"],"sourcesContent":["\nimport * as Blockly from 'blockly/core';\n\nconst button = {\n  'type': 'button',\n  'message0': 'get button on port %1',\n  'args0': [\n    {\n      'type': 'input_value',\n      'name': 'TEXT',\n      'check': 'Number',\n      'value': 0, // default value\n    },\n  ],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if button is pressed, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127,\n};\n\nconst swtch = {\n  'type': 'switch',\n  'message0': 'get switch on port %1',\n  'args0': [\n    {\n      'type': 'input_value',\n      'name': 'TEXT',\n      'check': 'Number',\n    },\n  ],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if switch is on, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127,\n};\n\nconst motion = {\n  'type': 'motion',\n  'message0': 'get motion sensor on port %1',\n  'args0': [\n    {\n      'type': 'input_value',\n      'name': 'TEXT',\n      'check': 'Number',\n    },\n  ],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if motion is detected, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127,\n};\n\nconst beam = {\n  'type': 'beam',\n  'message0': 'get beam break sensor on port %1',\n  'args0': [\n    {\n      'type': 'input_value',\n      'name': 'TEXT',\n      'check': 'Number',\n    },\n  ],\n  'output': 'Number',\n  'tooltip': 'Outputs 1 if motion is detected, 0 otherwise',\n  'helpUrl': '',\n  'colour': 127,\n};\n\nexport const readport = Blockly.common.createBlockDefinitionsFromJsonArray(\n    [button, swtch, motion, beam]);\n"],"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,cAAc;AAEvC,MAAMC,MAAM,GAAG;EACb,MAAM,EAAE,QAAQ;EAChB,UAAU,EAAE,uBAAuB;EACnC,OAAO,EAAE,CACP;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,CAAC,CAAE;EACd,CAAC,CACF;;EACD,QAAQ,EAAE,QAAQ;EAClB,SAAS,EAAE,6CAA6C;EACxD,SAAS,EAAE,EAAE;EACb,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,KAAK,GAAG;EACZ,MAAM,EAAE,QAAQ;EAChB,UAAU,EAAE,uBAAuB;EACnC,OAAO,EAAE,CACP;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,MAAM;IACd,OAAO,EAAE;EACX,CAAC,CACF;EACD,QAAQ,EAAE,QAAQ;EAClB,SAAS,EAAE,wCAAwC;EACnD,SAAS,EAAE,EAAE;EACb,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACb,MAAM,EAAE,QAAQ;EAChB,UAAU,EAAE,8BAA8B;EAC1C,OAAO,EAAE,CACP;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,MAAM;IACd,OAAO,EAAE;EACX,CAAC,CACF;EACD,QAAQ,EAAE,QAAQ;EAClB,SAAS,EAAE,8CAA8C;EACzD,SAAS,EAAE,EAAE;EACb,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,IAAI,GAAG;EACX,MAAM,EAAE,MAAM;EACd,UAAU,EAAE,kCAAkC;EAC9C,OAAO,EAAE,CACP;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,MAAM;IACd,OAAO,EAAE;EACX,CAAC,CACF;EACD,QAAQ,EAAE,QAAQ;EAClB,SAAS,EAAE,8CAA8C;EACzD,SAAS,EAAE,EAAE;EACb,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGL,OAAO,CAACM,MAAM,CAACC,mCAAmC,CACtE,CAACN,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}