{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/michaelbryant/Desktop/Littlearn/littlearn-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var BluetoothContext=/*#__PURE__*/createContext(undefined);export var BluetoothProvider=function BluetoothProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),bluetoothDevice=_useState2[0],setBluetoothDevice=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),outputText=_useState4[0],setOutputText=_useState4[1];// For writing to the output text\nvar writeToOutput=useCallback(function(data){setOutputText(function(prevOutput){return prevOutput+'\\n'+data;});},[setOutputText]);var connectToDevice=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _device$gatt,device,server,service,char;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return navigator.bluetooth.requestDevice({filters:[{services:['00001101-0000-1000-8000-00805f9b34fb']}]});case 3:device=_context.sent;console.log('Connected to:',device.name);_context.next=7;return(_device$gatt=device.gatt)===null||_device$gatt===void 0?void 0:_device$gatt.connect();case 7:server=_context.sent;console.log('Connected to GATT server');_context.next=11;return server===null||server===void 0?void 0:server.getPrimaryService('00001101-0000-1000-8000-00805f9b34fb');case 11:service=_context.sent;console.log('Service discovered');_context.next=15;return service===null||service===void 0?void 0:service.getCharacteristic('00001102-0000-1000-8000-00805f9b34fb');case 15:char=_context.sent;console.log('Characteristic discovered');console.log(char);if(!char){_context.next=27;break;}_context.next=21;return char.startNotifications();case 21:console.log('Notifications started');// Listen for data notifications\nchar.addEventListener('characteristicvaluechanged',function(event){var _event$target,_event$target2;console.log('Received data:',(_event$target=event.target)===null||_event$target===void 0?void 0:_event$target.value);var value=(_event$target2=event.target)===null||_event$target2===void 0?void 0:_event$target2.value;if(value){var textDecoder=new TextDecoder('utf-8');var decodedValue=textDecoder.decode(value);// Decode the callbacks per callbacks.md\n// __SCRIPTSENT__\nif(decodedValue==='__SCRIPTSENT__'){writeToOutput('Script uploaded.\\n');}// __PRINT__<TEXT>__PRINT__\nelse if(decodedValue.startsWith('__PRINT__')&&decodedValue.endsWith('__PRINT__')){var text=decodedValue.slice(9,decodedValue.length-9);writeToOutput(text+'\\n');}// __ERROR__<TEXT>__ERROR__\nelse if(decodedValue.startsWith('__ERROR__')&&decodedValue.endsWith('__ERROR__')){var _text=decodedValue.slice(9,decodedValue.length-9);writeToOutput('Error: '+_text+'\\n');}// setOutputText((prevOutput) => prevOutput + '\\n' + decodedValue);\n// setOutputText(decodedValue);\n}});setBluetoothDevice(device);writeToOutput('Connected to Bluetooth device.\\n');_context.next=28;break;case 27:// Handle the case when the characteristic is not found\nsetBluetoothDevice(null);case 28:_context.next=33;break;case 30:_context.prev=30;_context.t0=_context[\"catch\"](0);console.error('Bluetooth error:',_context.t0);case 33:case\"end\":return _context.stop();}},_callee,null,[[0,30]]);})),[writeToOutput]);var disconnectDevice=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _bluetoothDevice$gatt;var _bluetoothDevice$gatt2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(bluetoothDevice&&(_bluetoothDevice$gatt=bluetoothDevice.gatt)!==null&&_bluetoothDevice$gatt!==void 0&&_bluetoothDevice$gatt.connected){(_bluetoothDevice$gatt2=bluetoothDevice.gatt)===null||_bluetoothDevice$gatt2===void 0?void 0:_bluetoothDevice$gatt2.disconnect();console.log('Disconnected');}console.log('Disconnected from:',bluetoothDevice===null||bluetoothDevice===void 0?void 0:bluetoothDevice.name);setBluetoothDevice(null);setOutputText('');case 4:case\"end\":return _context2.stop();}},_callee2);})),[bluetoothDevice]);var sendBluetoothData=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data){var _bluetoothDevice$gatt3,textEncoder,encodedData,service,char;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!bluetoothDevice){_context3.next=13;break;}textEncoder=new TextEncoder();encodedData=textEncoder.encode(data);_context3.next=5;return(_bluetoothDevice$gatt3=bluetoothDevice.gatt)===null||_bluetoothDevice$gatt3===void 0?void 0:_bluetoothDevice$gatt3.getPrimaryService('00001101-0000-1000-8000-00805f9b34fb');case 5:service=_context3.sent;_context3.next=8;return service===null||service===void 0?void 0:service.getCharacteristic('00001102-0000-1000-8000-00805f9b34fb');case 8:char=_context3.sent;console.log('Sending data:',data);if(!char){_context3.next=13;break;}_context3.next=13;return char.writeValue(encodedData);case 13:case\"end\":return _context3.stop();}},_callee3);}));return function(_x){return _ref4.apply(this,arguments);};}(),[bluetoothDevice]);return/*#__PURE__*/_jsx(BluetoothContext.Provider,{value:{bluetoothDevice:bluetoothDevice,outputText:outputText,connectToDevice:connectToDevice,disconnectDevice:disconnectDevice,sendBluetoothData:sendBluetoothData,writeToOutput:writeToOutput},children:children});};export var useBluetooth=function useBluetooth(){var context=useContext(BluetoothContext);if(context===undefined){throw new Error('useBluetooth must be used within a BluetoothProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsx","_jsx","BluetoothContext","undefined","BluetoothProvider","_ref","children","_useState","_useState2","_slicedToArray","bluetoothDevice","setBluetoothDevice","_useState3","_useState4","outputText","setOutputText","writeToOutput","data","prevOutput","connectToDevice","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_device$gatt","device","server","service","char","wrap","_callee$","_context","prev","next","navigator","bluetooth","requestDevice","filters","services","sent","console","log","name","gatt","connect","getPrimaryService","getCharacteristic","startNotifications","addEventListener","event","_event$target","_event$target2","target","value","textDecoder","TextDecoder","decodedValue","decode","startsWith","endsWith","text","slice","length","t0","error","stop","disconnectDevice","_callee2","_bluetoothDevice$gatt","_bluetoothDevice$gatt2","_callee2$","_context2","connected","disconnect","sendBluetoothData","_ref4","_callee3","_bluetoothDevice$gatt3","textEncoder","encodedData","_callee3$","_context3","TextEncoder","encode","writeValue","_x","apply","arguments","Provider","useBluetooth","context","Error"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/BluetoothContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\n\ninterface BluetoothContextProps {\n  bluetoothDevice: BluetoothDevice | null;\n  outputText: string;\n  connectToDevice: () => Promise<void>;\n  disconnectDevice: () => Promise<void>;\n  sendBluetoothData: (data: string) => Promise<void>;\n  writeToOutput: (data: string) => void;\n}\n\nconst BluetoothContext = createContext<BluetoothContextProps | undefined>(undefined);\n\ninterface BluetoothProviderProps {\n  children: ReactNode;\n}\n\nexport const BluetoothProvider: React.FC<BluetoothProviderProps> = ({ children }) => {\n  const [bluetoothDevice, setBluetoothDevice] = useState<BluetoothDevice | null>(null);\n  const [outputText, setOutputText] = useState<string>('');\n\n  // For writing to the output text\n  const writeToOutput = useCallback((data: string) => {\n    setOutputText((prevOutput) => prevOutput + '\\n' + data);\n  }, [setOutputText]);\n\n\n  const connectToDevice = useCallback(async () => {\n    try {\n      const device = await navigator.bluetooth.requestDevice({\n        filters: [{ services: ['00001101-0000-1000-8000-00805f9b34fb'] }],\n      });\n\n      console.log('Connected to:', device.name);\n\n      const server = await device.gatt?.connect();\n      console.log('Connected to GATT server');\n\n      const service = await server?.getPrimaryService('00001101-0000-1000-8000-00805f9b34fb');\n      console.log('Service discovered');\n\n      const char = await service?.getCharacteristic('00001102-0000-1000-8000-00805f9b34fb');\n      console.log('Characteristic discovered');\n\n      console.log(char);\n\n      if (char) {\n        // Enable notifications for the characteristic to receive data\n        await char.startNotifications();\n        console.log('Notifications started');\n\n        // Listen for data notifications\n        char.addEventListener('characteristicvaluechanged', (event: any) => {\n          console.log('Received data:', event.target?.value);\n          const value = event.target?.value;\n          if (value) {\n            const textDecoder = new TextDecoder('utf-8');\n            const decodedValue = textDecoder.decode(value);\n\n            // Decode the callbacks per callbacks.md\n\n            // __SCRIPTSENT__\n            if (decodedValue === '__SCRIPTSENT__') {\n              writeToOutput('Script uploaded.\\n');\n            }\n\n            // __PRINT__<TEXT>__PRINT__\n            else if (decodedValue.startsWith('__PRINT__') && decodedValue.endsWith('__PRINT__')) {\n              const text = decodedValue.slice(9, decodedValue.length - 9);\n              writeToOutput(text + '\\n');\n            }\n\n            // __ERROR__<TEXT>__ERROR__\n            else if (decodedValue.startsWith('__ERROR__') && decodedValue.endsWith('__ERROR__')) {\n              const text = decodedValue.slice(9, decodedValue.length - 9);\n              writeToOutput('Error: ' + text + '\\n');\n            }\n\n            // setOutputText((prevOutput) => prevOutput + '\\n' + decodedValue);\n            // setOutputText(decodedValue);\n          }\n        });\n\n        setBluetoothDevice(device);\n        writeToOutput('Connected to Bluetooth device.\\n');\n      } else {\n        // Handle the case when the characteristic is not found\n        setBluetoothDevice(null);\n      }\n    } catch (error) {\n      console.error('Bluetooth error:', error);\n    }\n\n\n  }, [writeToOutput]);\n\n  const disconnectDevice = useCallback(async () => {\n    if (bluetoothDevice && bluetoothDevice.gatt?.connected) {\n      bluetoothDevice.gatt?.disconnect();\n      console.log('Disconnected');\n    }\n\n    console.log('Disconnected from:', bluetoothDevice?.name);\n\n    setBluetoothDevice(null);\n    setOutputText('');\n  }, [bluetoothDevice]);\n\n  const sendBluetoothData = useCallback(async (data: string) => {\n    if (bluetoothDevice) {\n      const textEncoder = new TextEncoder();\n      const encodedData = textEncoder.encode(data);\n      const service = await bluetoothDevice.gatt?.getPrimaryService('00001101-0000-1000-8000-00805f9b34fb');\n      const char = await service?.getCharacteristic('00001102-0000-1000-8000-00805f9b34fb');\n\n      console.log('Sending data:', data);\n\n      if (char) {\n        await char.writeValue(encodedData);\n      }\n    }\n  }, [bluetoothDevice]);\n\n  return (\n    <BluetoothContext.Provider\n      value={{\n        bluetoothDevice,\n        outputText,\n        connectToDevice,\n        disconnectDevice,\n        sendBluetoothData,\n        writeToOutput\n      }}\n    >\n      {children}\n    </BluetoothContext.Provider>\n  );\n};\n\nexport const useBluetooth = (): BluetoothContextProps => {\n  const context = useContext(BluetoothContext);\n  if (context === undefined) {\n    throw new Error('useBluetooth must be used within a BluetoothProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}