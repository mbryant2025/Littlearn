{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */import*as Blockly from'blockly/core';var storageKey='littlearn-workspace';/**\n * Saves the state of the workspace to browser's local storage.\n * @param {Blockly.Workspace} workspace Blockly workspace to save.\n */export var save=function save(workspace){var _window$localStorage;var data=Blockly.serialization.workspaces.save(workspace);(_window$localStorage=window.localStorage)===null||_window$localStorage===void 0?void 0:_window$localStorage.setItem(storageKey,JSON.stringify(data));};/**\n * Loads saved state from local storage into the given workspace.\n * @param {Blockly.Workspace} workspace Blockly workspace to load into.\n */export var load=function load(workspace){var _window$localStorage2;var data=(_window$localStorage2=window.localStorage)===null||_window$localStorage2===void 0?void 0:_window$localStorage2.getItem(storageKey);if(!data)return;// Don't emit events during loading.\nBlockly.Events.disable();Blockly.serialization.workspaces.load(JSON.parse(data),workspace,false);Blockly.Events.enable();};","map":{"version":3,"names":["Blockly","storageKey","save","workspace","_window$localStorage","data","serialization","workspaces","window","localStorage","setItem","JSON","stringify","load","_window$localStorage2","getItem","Events","disable","parse","enable"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/serialization.js"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as Blockly from 'blockly/core';\n\nconst storageKey = 'littlearn-workspace';\n\n/**\n * Saves the state of the workspace to browser's local storage.\n * @param {Blockly.Workspace} workspace Blockly workspace to save.\n */\nexport const save = function(workspace) {\n  const data = Blockly.serialization.workspaces.save(workspace);\n  window.localStorage?.setItem(storageKey, JSON.stringify(data));\n};\n\n/**\n * Loads saved state from local storage into the given workspace.\n * @param {Blockly.Workspace} workspace Blockly workspace to load into.\n */\nexport const load = function(workspace) {\n  const data = window.localStorage?.getItem(storageKey);\n  if (!data) return;\n\n  // Don't emit events during loading.\n  Blockly.Events.disable();\n  Blockly.serialization.workspaces.load(JSON.parse(data), workspace, false);\n  Blockly.Events.enable();\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA,MAAO,GAAK,CAAAA,OAAO,KAAM,cAAc,CAEvC,GAAM,CAAAC,UAAU,CAAG,qBAAqB,CAExC;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAYC,SAAS,CAAE,KAAAC,oBAAA,CACtC,GAAM,CAAAC,IAAI,CAAGL,OAAO,CAACM,aAAa,CAACC,UAAU,CAACL,IAAI,CAACC,SAAS,CAAC,CAC7D,CAAAC,oBAAA,CAAAI,MAAM,CAACC,YAAY,UAAAL,oBAAA,iBAAnBA,oBAAA,CAAqBM,OAAO,CAACT,UAAU,CAAEU,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC,CAChE,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAQ,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAYV,SAAS,CAAE,KAAAW,qBAAA,CACtC,GAAM,CAAAT,IAAI,EAAAS,qBAAA,CAAGN,MAAM,CAACC,YAAY,UAAAK,qBAAA,iBAAnBA,qBAAA,CAAqBC,OAAO,CAACd,UAAU,CAAC,CACrD,GAAI,CAACI,IAAI,CAAE,OAEX;AACAL,OAAO,CAACgB,MAAM,CAACC,OAAO,CAAC,CAAC,CACxBjB,OAAO,CAACM,aAAa,CAACC,UAAU,CAACM,IAAI,CAACF,IAAI,CAACO,KAAK,CAACb,IAAI,CAAC,CAAEF,SAAS,CAAE,KAAK,CAAC,CACzEH,OAAO,CAACgB,MAAM,CAACG,MAAM,CAAC,CAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}