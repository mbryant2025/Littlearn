{"ast":null,"code":"import * as Blockly from 'blockly/core';\n\n// const createVariableButton = {\n//     'type': 'create_int_variable_button',\n//     'message0': 'Create New Variable',\n//     'previousStatement': null,\n//     'nextStatement': null,\n//     'colour': 230,\n//   };\n\n//   export const createIntVariableButtonBlock = Blockly.common.createBlockDefinitionsFromJsonArray(\n//     [createVariableButton]\n//   );\n\n// Implement the 'CREATE_INT_VARIABLE' callback.\n\nBlockly.Blocks['create_int_variable_button'] = {\n  init: function () {\n    this.jsonInit(createVariableButton);\n  },\n  onchange: function (event) {\n    if (event.type === Blockly.Events.CLICK) {\n      if (event.element === 'create_int_variable_button') {\n        Blockly.Variables.createVariableButtonHandler(this.workspace, null, 'Number');\n      }\n    }\n  }\n};","map":{"version":3,"names":["Blockly","Blocks","init","jsonInit","createVariableButton","onchange","event","type","Events","CLICK","element","Variables","createVariableButtonHandler","workspace"],"sources":["/Users/michaelbryant/Desktop/Littlearn/littlearn-web/src/blockly/blocks/intVars.js"],"sourcesContent":["import * as Blockly from 'blockly/core';\n\n// const createVariableButton = {\n//     'type': 'create_int_variable_button',\n//     'message0': 'Create New Variable',\n//     'previousStatement': null,\n//     'nextStatement': null,\n//     'colour': 230,\n//   };\n\n//   export const createIntVariableButtonBlock = Blockly.common.createBlockDefinitionsFromJsonArray(\n//     [createVariableButton]\n//   );\n\n// Implement the 'CREATE_INT_VARIABLE' callback.\n\nBlockly.Blocks['create_int_variable_button'] = {\n    init: function() {\n      this.jsonInit(createVariableButton);\n    },\n    onchange: function(event) {\n      if (event.type === Blockly.Events.CLICK) {\n        if (event.element === 'create_int_variable_button') {\n          Blockly.Variables.createVariableButtonHandler(this.workspace, null, 'Number');\n        }\n      }\n    },\n  };\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,cAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEAA,OAAO,CAACC,MAAM,CAAC,4BAA4B,CAAC,GAAG;EAC3CC,IAAI,EAAE,SAAAA,CAAA,EAAW;IACf,IAAI,CAACC,QAAQ,CAACC,oBAAoB,CAAC;EACrC,CAAC;EACDC,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAE;IACxB,IAAIA,KAAK,CAACC,IAAI,KAAKP,OAAO,CAACQ,MAAM,CAACC,KAAK,EAAE;MACvC,IAAIH,KAAK,CAACI,OAAO,KAAK,4BAA4B,EAAE;QAClDV,OAAO,CAACW,SAAS,CAACC,2BAA2B,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;MAC/E;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}