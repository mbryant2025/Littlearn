{"ast":null,"code":"/**\n * logger.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nvar _require = require('readable-stream'),\n  Stream = _require.Stream,\n  Transform = _require.Transform;\nvar asyncForEach = require('async/forEach');\nvar _require2 = require('triple-beam'),\n  LEVEL = _require2.LEVEL,\n  SPLAT = _require2.SPLAT;\nvar isStream = require('is-stream');\nvar ExceptionHandler = require('./exception-handler');\nvar RejectionHandler = require('./rejection-handler');\nvar LegacyTransportStream = require('winston-transport/legacy');\nvar Profiler = require('./profiler');\nvar _require3 = require('./common'),\n  warn = _require3.warn;\nvar config = require('./config');\n\n/**\n * Captures the number of format (i.e. %s strings) in a given string.\n * Based on `util.format`, see Node.js source:\n * https://github.com/nodejs/node/blob/b1c8f15c5f169e021f7c46eb7b219de95fe97603/lib/util.js#L201-L230\n * @type {RegExp}\n */\nvar formatRegExp = /%[scdjifoO%]/g;\n\n/**\n * TODO: add class description.\n * @type {Logger}\n * @extends {Transform}\n */\nvar Logger = /*#__PURE__*/function (_Transform) {\n  _inherits(Logger, _Transform);\n  var _super = _createSuper(Logger);\n  /**\n   * Constructor function for the Logger object responsible for persisting log\n   * messages and metadata to one or more transports.\n   * @param {!Object} options - foo\n   */\n  function Logger(options) {\n    var _this;\n    _classCallCheck(this, Logger);\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _this.configure(options);\n    return _this;\n  }\n  _createClass(Logger, [{\n    key: \"child\",\n    value: function child(defaultRequestMetadata) {\n      var logger = this;\n      return Object.create(logger, {\n        write: {\n          value: function value(info) {\n            var infoClone = Object.assign({}, defaultRequestMetadata, info);\n\n            // Object.assign doesn't copy inherited Error\n            // properties so we have to do that explicitly\n            //\n            // Remark (indexzero): we should remove this\n            // since the errors format will handle this case.\n            //\n            if (info instanceof Error) {\n              infoClone.stack = info.stack;\n              infoClone.message = info.message;\n            }\n            logger.write(infoClone);\n          }\n        }\n      });\n    }\n\n    /**\n     * This will wholesale reconfigure this instance by:\n     * 1. Resetting all transports. Older transports will be removed implicitly.\n     * 2. Set all other options including levels, colors, rewriters, filters,\n     *    exceptionHandlers, etc.\n     * @param {!Object} options - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var _this2 = this;\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        silent = _ref.silent,\n        format = _ref.format,\n        defaultMeta = _ref.defaultMeta,\n        levels = _ref.levels,\n        _ref$level = _ref.level,\n        level = _ref$level === void 0 ? 'info' : _ref$level,\n        _ref$exitOnError = _ref.exitOnError,\n        exitOnError = _ref$exitOnError === void 0 ? true : _ref$exitOnError,\n        transports = _ref.transports,\n        colors = _ref.colors,\n        emitErrs = _ref.emitErrs,\n        formatters = _ref.formatters,\n        padLevels = _ref.padLevels,\n        rewriters = _ref.rewriters,\n        stripColors = _ref.stripColors,\n        exceptionHandlers = _ref.exceptionHandlers,\n        rejectionHandlers = _ref.rejectionHandlers;\n      // Reset transports if we already have them\n      if (this.transports.length) {\n        this.clear();\n      }\n      this.silent = silent;\n      this.format = format || this.format || require('logform/json')();\n      this.defaultMeta = defaultMeta || null;\n      // Hoist other options onto this instance.\n      this.levels = levels || this.levels || config.npm.levels;\n      this.level = level;\n      if (this.exceptions) {\n        this.exceptions.unhandle();\n      }\n      if (this.rejections) {\n        this.rejections.unhandle();\n      }\n      this.exceptions = new ExceptionHandler(this);\n      this.rejections = new RejectionHandler(this);\n      this.profilers = {};\n      this.exitOnError = exitOnError;\n\n      // Add all transports we have been provided.\n      if (transports) {\n        transports = Array.isArray(transports) ? transports : [transports];\n        transports.forEach(function (transport) {\n          return _this2.add(transport);\n        });\n      }\n      if (colors || emitErrs || formatters || padLevels || rewriters || stripColors) {\n        throw new Error(['{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.', 'Use a custom winston.format(function) instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n      }\n      if (exceptionHandlers) {\n        this.exceptions.handle(exceptionHandlers);\n      }\n      if (rejectionHandlers) {\n        this.rejections.handle(rejectionHandlers);\n      }\n    }\n  }, {\n    key: \"isLevelEnabled\",\n    value: function isLevelEnabled(level) {\n      var _this3 = this;\n      var givenLevelValue = getLevelValue(this.levels, level);\n      if (givenLevelValue === null) {\n        return false;\n      }\n      var configuredLevelValue = getLevelValue(this.levels, this.level);\n      if (configuredLevelValue === null) {\n        return false;\n      }\n      if (!this.transports || this.transports.length === 0) {\n        return configuredLevelValue >= givenLevelValue;\n      }\n      var index = this.transports.findIndex(function (transport) {\n        var transportLevelValue = getLevelValue(_this3.levels, transport.level);\n        if (transportLevelValue === null) {\n          transportLevelValue = configuredLevelValue;\n        }\n        return transportLevelValue >= givenLevelValue;\n      });\n      return index !== -1;\n    }\n\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Ensure backwards compatibility with a `log` method\n     * @param {mixed} level - Level the log message is written at.\n     * @param {mixed} msg - TODO: add param description.\n     * @param {mixed} meta - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     *\n     * @example\n     *    // Supports the existing API:\n     *    logger.log('info', 'Hello world', { custom: true });\n     *    logger.log('info', new Error('Yo, it\\'s on fire'));\n     *\n     *    // Requires winston.format.splat()\n     *    logger.log('info', '%s %d%%', 'A string', 50, { thisIsMeta: true });\n     *\n     *    // And the new API with a single JSON literal:\n     *    logger.log({ level: 'info', message: 'Hello world', custom: true });\n     *    logger.log({ level: 'info', message: new Error('Yo, it\\'s on fire') });\n     *\n     *    // Also requires winston.format.splat()\n     *    logger.log({\n     *      level: 'info',\n     *      message: '%s %d%%',\n     *      [SPLAT]: ['A string', 50],\n     *      meta: { thisIsMeta: true }\n     *    });\n     *\n     */\n    /* eslint-enable valid-jsdoc */\n  }, {\n    key: \"log\",\n    value: function log(level, msg) {\n      var _Object$assign2;\n      for (var _len = arguments.length, splat = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        splat[_key - 2] = arguments[_key];\n      }\n      // eslint-disable-line max-params\n      // Optimize for the hotpath of logging JSON literals\n      if (arguments.length === 1) {\n        // Yo dawg, I heard you like levels ... seriously ...\n        // In this context the LHS `level` here is actually the `info` so read\n        // this as: info[LEVEL] = info.level;\n        level[LEVEL] = level.level;\n        this._addDefaultMeta(level);\n        this.write(level);\n        return this;\n      }\n\n      // Slightly less hotpath, but worth optimizing for.\n      if (arguments.length === 2) {\n        var _msg;\n        if (msg && _typeof(msg) === 'object') {\n          msg[LEVEL] = msg.level = level;\n          this._addDefaultMeta(msg);\n          this.write(msg);\n          return this;\n        }\n        msg = (_msg = {}, _defineProperty(_msg, LEVEL, level), _defineProperty(_msg, \"level\", level), _defineProperty(_msg, \"message\", msg), _msg);\n        this._addDefaultMeta(msg);\n        this.write(msg);\n        return this;\n      }\n      var meta = splat[0];\n      if (_typeof(meta) === 'object' && meta !== null) {\n        // Extract tokens, if none available default to empty array to\n        // ensure consistancy in expected results\n        var tokens = msg && msg.match && msg.match(formatRegExp);\n        if (!tokens) {\n          var _Object$assign;\n          var info = Object.assign({}, this.defaultMeta, meta, (_Object$assign = {}, _defineProperty(_Object$assign, LEVEL, level), _defineProperty(_Object$assign, SPLAT, splat), _defineProperty(_Object$assign, \"level\", level), _defineProperty(_Object$assign, \"message\", msg), _Object$assign));\n          if (meta.message) info.message = \"\".concat(info.message, \" \").concat(meta.message);\n          if (meta.stack) info.stack = meta.stack;\n          this.write(info);\n          return this;\n        }\n      }\n      this.write(Object.assign({}, this.defaultMeta, (_Object$assign2 = {}, _defineProperty(_Object$assign2, LEVEL, level), _defineProperty(_Object$assign2, SPLAT, splat), _defineProperty(_Object$assign2, \"level\", level), _defineProperty(_Object$assign2, \"message\", msg), _Object$assign2)));\n      return this;\n    }\n\n    /**\n     * Pushes data so that it can be picked up by all of our pipe targets.\n     * @param {mixed} info - TODO: add param description.\n     * @param {mixed} enc - TODO: add param description.\n     * @param {mixed} callback - Continues stream processing.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_transform\",\n    value: function _transform(info, enc, callback) {\n      if (this.silent) {\n        return callback();\n      }\n\n      // [LEVEL] is only soft guaranteed to be set here since we are a proper\n      // stream. It is likely that `info` came in through `.log(info)` or\n      // `.info(info)`. If it is not defined, however, define it.\n      // This LEVEL symbol is provided by `triple-beam` and also used in:\n      // - logform\n      // - winston-transport\n      // - abstract-winston-transport\n      if (!info[LEVEL]) {\n        info[LEVEL] = info.level;\n      }\n\n      // Remark: really not sure what to do here, but this has been reported as\n      // very confusing by pre winston@2.0.0 users as quite confusing when using\n      // custom levels.\n      if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Unknown logger level: %s', info[LEVEL]);\n      }\n\n      // Remark: not sure if we should simply error here.\n      if (!this._readableState.pipes) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Attempt to write logs with no transports, which can increase memory usage: %j', info);\n      }\n\n      // Here we write to the `format` pipe-chain, which on `readable` above will\n      // push the formatted `info` Object onto the buffer for this instance. We trap\n      // (and re-throw) any errors generated by the user-provided format, but also\n      // guarantee that the streams callback is invoked so that we can continue flowing.\n      try {\n        this.push(this.format.transform(info, this.format.options));\n      } finally {\n        this._writableState.sync = false;\n        // eslint-disable-next-line callback-return\n        callback();\n      }\n    }\n\n    /**\n     * Delays the 'finish' event until all transport pipe targets have\n     * also emitted 'finish' or are already finished.\n     * @param {mixed} callback - Continues stream processing.\n     */\n  }, {\n    key: \"_final\",\n    value: function _final(callback) {\n      var transports = this.transports.slice();\n      asyncForEach(transports, function (transport, next) {\n        if (!transport || transport.finished) return setImmediate(next);\n        transport.once('finish', next);\n        transport.end();\n      }, callback);\n    }\n\n    /**\n     * Adds the transport to this logger instance by piping to it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"add\",\n    value: function add(transport) {\n      // Support backwards compatibility with all existing `winston < 3.x.x`\n      // transports which meet one of two criteria:\n      // 1. They inherit from winston.Transport in  < 3.x.x which is NOT a stream.\n      // 2. They expose a log method which has a length greater than 2 (i.e. more then\n      //    just `log(info, callback)`.\n      var target = !isStream(transport) || transport.log.length > 2 ? new LegacyTransportStream({\n        transport: transport\n      }) : transport;\n      if (!target._writableState || !target._writableState.objectMode) {\n        throw new Error('Transports must WritableStreams in objectMode. Set { objectMode: true }.');\n      }\n\n      // Listen for the `error` event and the `warn` event on the new Transport.\n      this._onEvent('error', target);\n      this._onEvent('warn', target);\n      this.pipe(target);\n      if (transport.handleExceptions) {\n        this.exceptions.handle();\n      }\n      if (transport.handleRejections) {\n        this.rejections.handle();\n      }\n      return this;\n    }\n\n    /**\n     * Removes the transport from this logger instance by unpiping from it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(transport) {\n      if (!transport) return this;\n      var target = transport;\n      if (!isStream(transport) || transport.log.length > 2) {\n        target = this.transports.filter(function (match) {\n          return match.transport === transport;\n        })[0];\n      }\n      if (target) {\n        this.unpipe(target);\n      }\n      return this;\n    }\n\n    /**\n     * Removes all transports from this logger instance.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.unpipe();\n      return this;\n    }\n\n    /**\n     * Cleans up resources (streams, event listeners) for all transports\n     * associated with this instance (if necessary).\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.exceptions.unhandle();\n      this.rejections.unhandle();\n      this.clear();\n      this.emit('close');\n      return this;\n    }\n\n    /**\n     * Sets the `target` levels specified on this instance.\n     * @param {Object} Target levels to use on this instance.\n     */\n  }, {\n    key: \"setLevels\",\n    value: function setLevels() {\n      warn.deprecated('setLevels');\n    }\n\n    /**\n     * Queries the all transports for this instance with the specified `options`.\n     * This will aggregate each transport's results into one object containing\n     * a property per transport.\n     * @param {Object} options - Query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = options || {};\n      var results = {};\n      var queryObject = Object.assign({}, options.query || {});\n\n      // Helper function to query a single transport\n      function queryTransport(transport, next) {\n        if (options.query && typeof transport.formatQuery === 'function') {\n          options.query = transport.formatQuery(queryObject);\n        }\n        transport.query(options, function (err, res) {\n          if (err) {\n            return next(err);\n          }\n          if (typeof transport.formatResults === 'function') {\n            res = transport.formatResults(res, options.format);\n          }\n          next(null, res);\n        });\n      }\n\n      // Helper function to accumulate the results from `queryTransport` into\n      // the `results`.\n      function addResults(transport, next) {\n        queryTransport(transport, function (err, result) {\n          // queryTransport could potentially invoke the callback multiple times\n          // since Transport code can be unpredictable.\n          if (next) {\n            result = err || result;\n            if (result) {\n              results[transport.name] = result;\n            }\n\n            // eslint-disable-next-line callback-return\n            next();\n          }\n          next = null;\n        });\n      }\n\n      // Iterate over the transports in parallel setting the appropriate key in\n      // the `results`.\n      asyncForEach(this.transports.filter(function (transport) {\n        return !!transport.query;\n      }), addResults, function () {\n        return callback(null, results);\n      });\n    }\n\n    /**\n     * Returns a log stream for all transports. Options object is optional.\n     * @param{Object} options={} - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     */\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var out = new Stream();\n      var streams = [];\n      out._streams = streams;\n      out.destroy = function () {\n        var i = streams.length;\n        while (i--) {\n          streams[i].destroy();\n        }\n      };\n\n      // Create a list of all transports for this instance.\n      this.transports.filter(function (transport) {\n        return !!transport.stream;\n      }).forEach(function (transport) {\n        var str = transport.stream(options);\n        if (!str) {\n          return;\n        }\n        streams.push(str);\n        str.on('log', function (log) {\n          log.transport = log.transport || [];\n          log.transport.push(transport.name);\n          out.emit('log', log);\n        });\n        str.on('error', function (err) {\n          err.transport = err.transport || [];\n          err.transport.push(transport.name);\n          out.emit('error', err);\n        });\n      });\n      return out;\n    }\n\n    /**\n     * Returns an object corresponding to a specific timing. When done is called\n     * the timer will finish and log the duration. e.g.:\n     * @returns {Profile} - TODO: add return description.\n     * @example\n     *    const timer = winston.startTimer()\n     *    setTimeout(() => {\n     *      timer.done({\n     *        message: 'Logging message'\n     *      });\n     *    }, 1000);\n     */\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      return new Profiler(this);\n    }\n\n    /**\n     * Tracks the time inbetween subsequent calls to this method with the same\n     * `id` parameter. The second call to this method will log the difference in\n     * milliseconds along with the message.\n     * @param {string} id Unique id of the profiler\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"profile\",\n    value: function profile(id) {\n      var time = Date.now();\n      if (this.profilers[id]) {\n        var timeEnd = this.profilers[id];\n        delete this.profilers[id];\n\n        // Attempt to be kind to users if they are still using older APIs.\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        if (typeof args[args.length - 2] === 'function') {\n          // eslint-disable-next-line no-console\n          console.warn('Callback function no longer supported as of winston@3.0.0');\n          args.pop();\n        }\n\n        // Set the duration property of the metadata\n        var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n        info.level = info.level || 'info';\n        info.durationMs = time - timeEnd;\n        info.message = info.message || id;\n        return this.write(info);\n      }\n      this.profilers[id] = time;\n      return this;\n    }\n\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n  }, {\n    key: \"handleExceptions\",\n    value: function handleExceptions() {\n      var _this$exceptions;\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()');\n      (_this$exceptions = this.exceptions).handle.apply(_this$exceptions, arguments);\n    }\n\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n  }, {\n    key: \"unhandleExceptions\",\n    value: function unhandleExceptions() {\n      var _this$exceptions2;\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()');\n      (_this$exceptions2 = this.exceptions).unhandle.apply(_this$exceptions2, arguments);\n    }\n\n    /**\n     * Throw a more meaningful deprecation notice\n     * @throws {Error} - TODO: add throws description.\n     */\n  }, {\n    key: \"cli\",\n    value: function cli() {\n      throw new Error(['Logger.cli() was removed in winston@3.0.0', 'Use a custom winston.formats.cli() instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n    }\n\n    /**\n     * Bubbles the `event` that occured on the specified `transport` up\n     * from this instance.\n     * @param {string} event - The event that occured\n     * @param {Object} transport - Transport on which the event occured\n     * @private\n     */\n  }, {\n    key: \"_onEvent\",\n    value: function _onEvent(event, transport) {\n      function transportEvent(err) {\n        // https://github.com/winstonjs/winston/issues/1364\n        if (event === 'error' && !this.transports.includes(transport)) {\n          this.add(transport);\n        }\n        this.emit(event, err, transport);\n      }\n      if (!transport['__winston' + event]) {\n        transport['__winston' + event] = transportEvent.bind(this);\n        transport.on(event, transport['__winston' + event]);\n      }\n    }\n  }, {\n    key: \"_addDefaultMeta\",\n    value: function _addDefaultMeta(msg) {\n      if (this.defaultMeta) {\n        Object.assign(msg, this.defaultMeta);\n      }\n    }\n  }]);\n  return Logger;\n}(Transform);\nfunction getLevelValue(levels, level) {\n  var value = levels[level];\n  if (!value && value !== 0) {\n    return null;\n  }\n  return value;\n}\n\n/**\n * Represents the current readableState pipe targets for this Logger instance.\n * @type {Array|Object}\n */\nObject.defineProperty(Logger.prototype, 'transports', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    var pipes = this._readableState.pipes;\n    return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;\n  }\n});\nmodule.exports = Logger;","map":{"version":3,"names":["_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_require","require","Stream","Transform","asyncForEach","_require2","LEVEL","SPLAT","isStream","ExceptionHandler","RejectionHandler","LegacyTransportStream","Profiler","_require3","warn","config","formatRegExp","Logger","_Transform","_super","options","_this","objectMode","configure","child","defaultRequestMetadata","logger","write","info","infoClone","assign","Error","stack","message","_this2","_ref","silent","format","defaultMeta","levels","_ref$level","level","_ref$exitOnError","exitOnError","transports","colors","emitErrs","formatters","padLevels","rewriters","stripColors","exceptionHandlers","rejectionHandlers","clear","npm","exceptions","unhandle","rejections","profilers","Array","isArray","forEach","transport","add","join","handle","isLevelEnabled","_this3","givenLevelValue","getLevelValue","configuredLevelValue","index","findIndex","transportLevelValue","log","msg","_Object$assign2","_len","splat","_key","_addDefaultMeta","_msg","meta","tokens","match","_Object$assign","concat","_transform","enc","callback","console","error","_readableState","pipes","push","transform","_writableState","sync","_final","slice","next","finished","setImmediate","once","end","_onEvent","pipe","handleExceptions","handleRejections","remove","filter","unpipe","close","emit","setLevels","deprecated","query","results","queryObject","queryTransport","formatQuery","err","formatResults","addResults","name","stream","out","streams","_streams","destroy","str","on","startTimer","profile","id","time","Date","now","timeEnd","_len2","args","_key2","pop","durationMs","_this$exceptions","unhandleExceptions","_this$exceptions2","cli","event","transportEvent","includes","get","module","exports"],"sources":["/Users/michaelbryant/node_modules/winston/dist/winston/logger.js"],"sourcesContent":["/**\n * logger.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar _require = require('readable-stream'),\n  Stream = _require.Stream,\n  Transform = _require.Transform;\nvar asyncForEach = require('async/forEach');\nvar _require2 = require('triple-beam'),\n  LEVEL = _require2.LEVEL,\n  SPLAT = _require2.SPLAT;\nvar isStream = require('is-stream');\nvar ExceptionHandler = require('./exception-handler');\nvar RejectionHandler = require('./rejection-handler');\nvar LegacyTransportStream = require('winston-transport/legacy');\nvar Profiler = require('./profiler');\nvar _require3 = require('./common'),\n  warn = _require3.warn;\nvar config = require('./config');\n\n/**\n * Captures the number of format (i.e. %s strings) in a given string.\n * Based on `util.format`, see Node.js source:\n * https://github.com/nodejs/node/blob/b1c8f15c5f169e021f7c46eb7b219de95fe97603/lib/util.js#L201-L230\n * @type {RegExp}\n */\nvar formatRegExp = /%[scdjifoO%]/g;\n\n/**\n * TODO: add class description.\n * @type {Logger}\n * @extends {Transform}\n */\nvar Logger = /*#__PURE__*/function (_Transform) {\n  _inherits(Logger, _Transform);\n  var _super = _createSuper(Logger);\n  /**\n   * Constructor function for the Logger object responsible for persisting log\n   * messages and metadata to one or more transports.\n   * @param {!Object} options - foo\n   */\n  function Logger(options) {\n    var _this;\n    _classCallCheck(this, Logger);\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _this.configure(options);\n    return _this;\n  }\n  _createClass(Logger, [{\n    key: \"child\",\n    value: function child(defaultRequestMetadata) {\n      var logger = this;\n      return Object.create(logger, {\n        write: {\n          value: function value(info) {\n            var infoClone = Object.assign({}, defaultRequestMetadata, info);\n\n            // Object.assign doesn't copy inherited Error\n            // properties so we have to do that explicitly\n            //\n            // Remark (indexzero): we should remove this\n            // since the errors format will handle this case.\n            //\n            if (info instanceof Error) {\n              infoClone.stack = info.stack;\n              infoClone.message = info.message;\n            }\n            logger.write(infoClone);\n          }\n        }\n      });\n    }\n\n    /**\n     * This will wholesale reconfigure this instance by:\n     * 1. Resetting all transports. Older transports will be removed implicitly.\n     * 2. Set all other options including levels, colors, rewriters, filters,\n     *    exceptionHandlers, etc.\n     * @param {!Object} options - TODO: add param description.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var _this2 = this;\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        silent = _ref.silent,\n        format = _ref.format,\n        defaultMeta = _ref.defaultMeta,\n        levels = _ref.levels,\n        _ref$level = _ref.level,\n        level = _ref$level === void 0 ? 'info' : _ref$level,\n        _ref$exitOnError = _ref.exitOnError,\n        exitOnError = _ref$exitOnError === void 0 ? true : _ref$exitOnError,\n        transports = _ref.transports,\n        colors = _ref.colors,\n        emitErrs = _ref.emitErrs,\n        formatters = _ref.formatters,\n        padLevels = _ref.padLevels,\n        rewriters = _ref.rewriters,\n        stripColors = _ref.stripColors,\n        exceptionHandlers = _ref.exceptionHandlers,\n        rejectionHandlers = _ref.rejectionHandlers;\n      // Reset transports if we already have them\n      if (this.transports.length) {\n        this.clear();\n      }\n      this.silent = silent;\n      this.format = format || this.format || require('logform/json')();\n      this.defaultMeta = defaultMeta || null;\n      // Hoist other options onto this instance.\n      this.levels = levels || this.levels || config.npm.levels;\n      this.level = level;\n      if (this.exceptions) {\n        this.exceptions.unhandle();\n      }\n      if (this.rejections) {\n        this.rejections.unhandle();\n      }\n      this.exceptions = new ExceptionHandler(this);\n      this.rejections = new RejectionHandler(this);\n      this.profilers = {};\n      this.exitOnError = exitOnError;\n\n      // Add all transports we have been provided.\n      if (transports) {\n        transports = Array.isArray(transports) ? transports : [transports];\n        transports.forEach(function (transport) {\n          return _this2.add(transport);\n        });\n      }\n      if (colors || emitErrs || formatters || padLevels || rewriters || stripColors) {\n        throw new Error(['{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.', 'Use a custom winston.format(function) instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n      }\n      if (exceptionHandlers) {\n        this.exceptions.handle(exceptionHandlers);\n      }\n      if (rejectionHandlers) {\n        this.rejections.handle(rejectionHandlers);\n      }\n    }\n  }, {\n    key: \"isLevelEnabled\",\n    value: function isLevelEnabled(level) {\n      var _this3 = this;\n      var givenLevelValue = getLevelValue(this.levels, level);\n      if (givenLevelValue === null) {\n        return false;\n      }\n      var configuredLevelValue = getLevelValue(this.levels, this.level);\n      if (configuredLevelValue === null) {\n        return false;\n      }\n      if (!this.transports || this.transports.length === 0) {\n        return configuredLevelValue >= givenLevelValue;\n      }\n      var index = this.transports.findIndex(function (transport) {\n        var transportLevelValue = getLevelValue(_this3.levels, transport.level);\n        if (transportLevelValue === null) {\n          transportLevelValue = configuredLevelValue;\n        }\n        return transportLevelValue >= givenLevelValue;\n      });\n      return index !== -1;\n    }\n\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Ensure backwards compatibility with a `log` method\n     * @param {mixed} level - Level the log message is written at.\n     * @param {mixed} msg - TODO: add param description.\n     * @param {mixed} meta - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     *\n     * @example\n     *    // Supports the existing API:\n     *    logger.log('info', 'Hello world', { custom: true });\n     *    logger.log('info', new Error('Yo, it\\'s on fire'));\n     *\n     *    // Requires winston.format.splat()\n     *    logger.log('info', '%s %d%%', 'A string', 50, { thisIsMeta: true });\n     *\n     *    // And the new API with a single JSON literal:\n     *    logger.log({ level: 'info', message: 'Hello world', custom: true });\n     *    logger.log({ level: 'info', message: new Error('Yo, it\\'s on fire') });\n     *\n     *    // Also requires winston.format.splat()\n     *    logger.log({\n     *      level: 'info',\n     *      message: '%s %d%%',\n     *      [SPLAT]: ['A string', 50],\n     *      meta: { thisIsMeta: true }\n     *    });\n     *\n     */\n    /* eslint-enable valid-jsdoc */\n  }, {\n    key: \"log\",\n    value: function log(level, msg) {\n      var _Object$assign2;\n      for (var _len = arguments.length, splat = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        splat[_key - 2] = arguments[_key];\n      }\n      // eslint-disable-line max-params\n      // Optimize for the hotpath of logging JSON literals\n      if (arguments.length === 1) {\n        // Yo dawg, I heard you like levels ... seriously ...\n        // In this context the LHS `level` here is actually the `info` so read\n        // this as: info[LEVEL] = info.level;\n        level[LEVEL] = level.level;\n        this._addDefaultMeta(level);\n        this.write(level);\n        return this;\n      }\n\n      // Slightly less hotpath, but worth optimizing for.\n      if (arguments.length === 2) {\n        var _msg;\n        if (msg && _typeof(msg) === 'object') {\n          msg[LEVEL] = msg.level = level;\n          this._addDefaultMeta(msg);\n          this.write(msg);\n          return this;\n        }\n        msg = (_msg = {}, _defineProperty(_msg, LEVEL, level), _defineProperty(_msg, \"level\", level), _defineProperty(_msg, \"message\", msg), _msg);\n        this._addDefaultMeta(msg);\n        this.write(msg);\n        return this;\n      }\n      var meta = splat[0];\n      if (_typeof(meta) === 'object' && meta !== null) {\n        // Extract tokens, if none available default to empty array to\n        // ensure consistancy in expected results\n        var tokens = msg && msg.match && msg.match(formatRegExp);\n        if (!tokens) {\n          var _Object$assign;\n          var info = Object.assign({}, this.defaultMeta, meta, (_Object$assign = {}, _defineProperty(_Object$assign, LEVEL, level), _defineProperty(_Object$assign, SPLAT, splat), _defineProperty(_Object$assign, \"level\", level), _defineProperty(_Object$assign, \"message\", msg), _Object$assign));\n          if (meta.message) info.message = \"\".concat(info.message, \" \").concat(meta.message);\n          if (meta.stack) info.stack = meta.stack;\n          this.write(info);\n          return this;\n        }\n      }\n      this.write(Object.assign({}, this.defaultMeta, (_Object$assign2 = {}, _defineProperty(_Object$assign2, LEVEL, level), _defineProperty(_Object$assign2, SPLAT, splat), _defineProperty(_Object$assign2, \"level\", level), _defineProperty(_Object$assign2, \"message\", msg), _Object$assign2)));\n      return this;\n    }\n\n    /**\n     * Pushes data so that it can be picked up by all of our pipe targets.\n     * @param {mixed} info - TODO: add param description.\n     * @param {mixed} enc - TODO: add param description.\n     * @param {mixed} callback - Continues stream processing.\n     * @returns {undefined}\n     * @private\n     */\n  }, {\n    key: \"_transform\",\n    value: function _transform(info, enc, callback) {\n      if (this.silent) {\n        return callback();\n      }\n\n      // [LEVEL] is only soft guaranteed to be set here since we are a proper\n      // stream. It is likely that `info` came in through `.log(info)` or\n      // `.info(info)`. If it is not defined, however, define it.\n      // This LEVEL symbol is provided by `triple-beam` and also used in:\n      // - logform\n      // - winston-transport\n      // - abstract-winston-transport\n      if (!info[LEVEL]) {\n        info[LEVEL] = info.level;\n      }\n\n      // Remark: really not sure what to do here, but this has been reported as\n      // very confusing by pre winston@2.0.0 users as quite confusing when using\n      // custom levels.\n      if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Unknown logger level: %s', info[LEVEL]);\n      }\n\n      // Remark: not sure if we should simply error here.\n      if (!this._readableState.pipes) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Attempt to write logs with no transports, which can increase memory usage: %j', info);\n      }\n\n      // Here we write to the `format` pipe-chain, which on `readable` above will\n      // push the formatted `info` Object onto the buffer for this instance. We trap\n      // (and re-throw) any errors generated by the user-provided format, but also\n      // guarantee that the streams callback is invoked so that we can continue flowing.\n      try {\n        this.push(this.format.transform(info, this.format.options));\n      } finally {\n        this._writableState.sync = false;\n        // eslint-disable-next-line callback-return\n        callback();\n      }\n    }\n\n    /**\n     * Delays the 'finish' event until all transport pipe targets have\n     * also emitted 'finish' or are already finished.\n     * @param {mixed} callback - Continues stream processing.\n     */\n  }, {\n    key: \"_final\",\n    value: function _final(callback) {\n      var transports = this.transports.slice();\n      asyncForEach(transports, function (transport, next) {\n        if (!transport || transport.finished) return setImmediate(next);\n        transport.once('finish', next);\n        transport.end();\n      }, callback);\n    }\n\n    /**\n     * Adds the transport to this logger instance by piping to it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"add\",\n    value: function add(transport) {\n      // Support backwards compatibility with all existing `winston < 3.x.x`\n      // transports which meet one of two criteria:\n      // 1. They inherit from winston.Transport in  < 3.x.x which is NOT a stream.\n      // 2. They expose a log method which has a length greater than 2 (i.e. more then\n      //    just `log(info, callback)`.\n      var target = !isStream(transport) || transport.log.length > 2 ? new LegacyTransportStream({\n        transport: transport\n      }) : transport;\n      if (!target._writableState || !target._writableState.objectMode) {\n        throw new Error('Transports must WritableStreams in objectMode. Set { objectMode: true }.');\n      }\n\n      // Listen for the `error` event and the `warn` event on the new Transport.\n      this._onEvent('error', target);\n      this._onEvent('warn', target);\n      this.pipe(target);\n      if (transport.handleExceptions) {\n        this.exceptions.handle();\n      }\n      if (transport.handleRejections) {\n        this.rejections.handle();\n      }\n      return this;\n    }\n\n    /**\n     * Removes the transport from this logger instance by unpiping from it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(transport) {\n      if (!transport) return this;\n      var target = transport;\n      if (!isStream(transport) || transport.log.length > 2) {\n        target = this.transports.filter(function (match) {\n          return match.transport === transport;\n        })[0];\n      }\n      if (target) {\n        this.unpipe(target);\n      }\n      return this;\n    }\n\n    /**\n     * Removes all transports from this logger instance.\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.unpipe();\n      return this;\n    }\n\n    /**\n     * Cleans up resources (streams, event listeners) for all transports\n     * associated with this instance (if necessary).\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.exceptions.unhandle();\n      this.rejections.unhandle();\n      this.clear();\n      this.emit('close');\n      return this;\n    }\n\n    /**\n     * Sets the `target` levels specified on this instance.\n     * @param {Object} Target levels to use on this instance.\n     */\n  }, {\n    key: \"setLevels\",\n    value: function setLevels() {\n      warn.deprecated('setLevels');\n    }\n\n    /**\n     * Queries the all transports for this instance with the specified `options`.\n     * This will aggregate each transport's results into one object containing\n     * a property per transport.\n     * @param {Object} options - Query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = options || {};\n      var results = {};\n      var queryObject = Object.assign({}, options.query || {});\n\n      // Helper function to query a single transport\n      function queryTransport(transport, next) {\n        if (options.query && typeof transport.formatQuery === 'function') {\n          options.query = transport.formatQuery(queryObject);\n        }\n        transport.query(options, function (err, res) {\n          if (err) {\n            return next(err);\n          }\n          if (typeof transport.formatResults === 'function') {\n            res = transport.formatResults(res, options.format);\n          }\n          next(null, res);\n        });\n      }\n\n      // Helper function to accumulate the results from `queryTransport` into\n      // the `results`.\n      function addResults(transport, next) {\n        queryTransport(transport, function (err, result) {\n          // queryTransport could potentially invoke the callback multiple times\n          // since Transport code can be unpredictable.\n          if (next) {\n            result = err || result;\n            if (result) {\n              results[transport.name] = result;\n            }\n\n            // eslint-disable-next-line callback-return\n            next();\n          }\n          next = null;\n        });\n      }\n\n      // Iterate over the transports in parallel setting the appropriate key in\n      // the `results`.\n      asyncForEach(this.transports.filter(function (transport) {\n        return !!transport.query;\n      }), addResults, function () {\n        return callback(null, results);\n      });\n    }\n\n    /**\n     * Returns a log stream for all transports. Options object is optional.\n     * @param{Object} options={} - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     */\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var out = new Stream();\n      var streams = [];\n      out._streams = streams;\n      out.destroy = function () {\n        var i = streams.length;\n        while (i--) {\n          streams[i].destroy();\n        }\n      };\n\n      // Create a list of all transports for this instance.\n      this.transports.filter(function (transport) {\n        return !!transport.stream;\n      }).forEach(function (transport) {\n        var str = transport.stream(options);\n        if (!str) {\n          return;\n        }\n        streams.push(str);\n        str.on('log', function (log) {\n          log.transport = log.transport || [];\n          log.transport.push(transport.name);\n          out.emit('log', log);\n        });\n        str.on('error', function (err) {\n          err.transport = err.transport || [];\n          err.transport.push(transport.name);\n          out.emit('error', err);\n        });\n      });\n      return out;\n    }\n\n    /**\n     * Returns an object corresponding to a specific timing. When done is called\n     * the timer will finish and log the duration. e.g.:\n     * @returns {Profile} - TODO: add return description.\n     * @example\n     *    const timer = winston.startTimer()\n     *    setTimeout(() => {\n     *      timer.done({\n     *        message: 'Logging message'\n     *      });\n     *    }, 1000);\n     */\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      return new Profiler(this);\n    }\n\n    /**\n     * Tracks the time inbetween subsequent calls to this method with the same\n     * `id` parameter. The second call to this method will log the difference in\n     * milliseconds along with the message.\n     * @param {string} id Unique id of the profiler\n     * @returns {Logger} - TODO: add return description.\n     */\n  }, {\n    key: \"profile\",\n    value: function profile(id) {\n      var time = Date.now();\n      if (this.profilers[id]) {\n        var timeEnd = this.profilers[id];\n        delete this.profilers[id];\n\n        // Attempt to be kind to users if they are still using older APIs.\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        if (typeof args[args.length - 2] === 'function') {\n          // eslint-disable-next-line no-console\n          console.warn('Callback function no longer supported as of winston@3.0.0');\n          args.pop();\n        }\n\n        // Set the duration property of the metadata\n        var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n        info.level = info.level || 'info';\n        info.durationMs = time - timeEnd;\n        info.message = info.message || id;\n        return this.write(info);\n      }\n      this.profilers[id] = time;\n      return this;\n    }\n\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n  }, {\n    key: \"handleExceptions\",\n    value: function handleExceptions() {\n      var _this$exceptions;\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()');\n      (_this$exceptions = this.exceptions).handle.apply(_this$exceptions, arguments);\n    }\n\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n  }, {\n    key: \"unhandleExceptions\",\n    value: function unhandleExceptions() {\n      var _this$exceptions2;\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()');\n      (_this$exceptions2 = this.exceptions).unhandle.apply(_this$exceptions2, arguments);\n    }\n\n    /**\n     * Throw a more meaningful deprecation notice\n     * @throws {Error} - TODO: add throws description.\n     */\n  }, {\n    key: \"cli\",\n    value: function cli() {\n      throw new Error(['Logger.cli() was removed in winston@3.0.0', 'Use a custom winston.formats.cli() instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n    }\n\n    /**\n     * Bubbles the `event` that occured on the specified `transport` up\n     * from this instance.\n     * @param {string} event - The event that occured\n     * @param {Object} transport - Transport on which the event occured\n     * @private\n     */\n  }, {\n    key: \"_onEvent\",\n    value: function _onEvent(event, transport) {\n      function transportEvent(err) {\n        // https://github.com/winstonjs/winston/issues/1364\n        if (event === 'error' && !this.transports.includes(transport)) {\n          this.add(transport);\n        }\n        this.emit(event, err, transport);\n      }\n      if (!transport['__winston' + event]) {\n        transport['__winston' + event] = transportEvent.bind(this);\n        transport.on(event, transport['__winston' + event]);\n      }\n    }\n  }, {\n    key: \"_addDefaultMeta\",\n    value: function _addDefaultMeta(msg) {\n      if (this.defaultMeta) {\n        Object.assign(msg, this.defaultMeta);\n      }\n    }\n  }]);\n  return Logger;\n}(Transform);\nfunction getLevelValue(levels, level) {\n  var value = levels[level];\n  if (!value && value !== 0) {\n    return null;\n  }\n  return value;\n}\n\n/**\n * Represents the current readableState pipe targets for this Logger instance.\n * @type {Array|Object}\n */\nObject.defineProperty(Logger.prototype, 'transports', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    var pipes = this._readableState.pipes;\n    return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;\n  }\n});\nmodule.exports = Logger;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}