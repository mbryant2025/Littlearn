!function(n,e){"function"==typeof define&&define.amd?define(["blockly"],e):"object"==typeof exports?module.exports=e(require("blockly")):n.Blockly.Arduino=e(n.Blockly)}(this,function(d){var t=t||{require:function(){},provide:function(){},isFunction:function(n){return n&&"[object Function]"==={}.toString.call(n)}};t.provide("Blockly.Arduino"),t.require("Blockly.Generator"),d.Arduino=new d.Generator("Arduino"),d.Arduino.addReservedWords("setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,interger, constants,floating,point,void,bookean,char,unsigned,byte,int,word,long,float,double,string,String,array,static, volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts"),d.Arduino.ORDER_ATOMIC=0,d.Arduino.ORDER_UNARY_POSTFIX=1,d.Arduino.ORDER_UNARY_PREFIX=2,d.Arduino.ORDER_MULTIPLICATIVE=3,d.Arduino.ORDER_ADDITIVE=4,d.Arduino.ORDER_SHIFT=5,d.Arduino.ORDER_RELATIONAL=6,d.Arduino.ORDER_EQUALITY=7,d.Arduino.ORDER_BITWISE_AND=8,d.Arduino.ORDER_BITWISE_XOR=9,d.Arduino.ORDER_BITWISE_OR=10,d.Arduino.ORDER_LOGICAL_AND=11,d.Arduino.ORDER_LOGICAL_OR=12,d.Arduino.ORDER_CONDITIONAL=13,d.Arduino.ORDER_ASSIGNMENT=14,d.Arduino.ORDER_NONE=99;var o={arduino:{description:"Arduino standard-compatible board",digital:[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],analog:[["A0","A0"],["A1","A1"],["A2","A2"],["A3","A3"],["A4","A4"],["A5","A5"]],serial:9600},arduino_mega:{description:"Arduino Mega-compatible board"}};o.default=o.arduino,d.Arduino.init=function(n){d.Arduino.definitions_=Object.create(null),d.Arduino.setups_=Object.create(null),d.Arduino.nameDB_?d.Arduino.nameDB_.reset():d.Arduino.nameDB_=new d.Names(d.Arduino.RESERVED_WORDS_);var e=[];t.require("Blockly.Blocks.variables");for(var i=d.Variables.allUsedVarModels(n),r=0;r<i.length;r++)e[r]="int "+d.Arduino.nameDB_.getName(i[r],d.Variables.NAME_TYPE)+";\n";d.Arduino.definitions_.variables=e.join("\n")},d.Arduino.finish=function(n){n="void loop() \n{\n"+(n=(n="  "+n.replace(/\n/g,"\n  ")).replace(/\n\s+$/,"\n"))+"\n}";var e=[],i=[];for(t in d.Arduino.definitions_){var r=d.Arduino.definitions_[t];(r.match(/^#include/)?e:i).push(r)}var t,o=[];for(t in d.Arduino.setups_)o.push(d.Arduino.setups_[t]);return(e.join("\n")+"\n\n"+i.join("\n")+"\nvoid setup() \n{\n  "+o.join("\n  ")+"\n}\n\n").replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+n},d.Arduino.scrubNakedValue=function(n){return n+";\n"},d.Arduino.quote_=function(n){return'"'+(n=n.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'"))+'"'},d.Arduino.scrub_=function(n,e){if(null===e)return"";var i="";if(!n.outputConnection||!n.outputConnection.targetConnection){var r=n.getCommentText();r&&(i+=d.Arduino.prefixLines(r,"// ")+"\n");for(var t,o=0;o<n.inputList.length;o++)n.inputList[o].type!=d.INPUT_VALUE||(t=n.inputList[o].connection.targetBlock())&&(r=d.Arduino.allNestedComments(t))&&(i+=d.Arduino.prefixLines(r,"// "))}var u=n.nextConnection&&n.nextConnection.targetBlock();return i+e+d.Arduino.blockToCode(u)},t.provide("Blockly.Arduino.base"),t.require("Blockly.Arduino"),d.Arduino.base_delay=function(){return"delay("+(d.Arduino.valueToCode(this,"DELAY_TIME",d.Arduino.ORDER_ATOMIC)||"1000")+");\n"},d.Arduino.base_map=function(){return["map("+d.Arduino.valueToCode(this,"NUM",d.Arduino.ORDER_NONE)+", 0, 1024, 0, "+d.Arduino.valueToCode(this,"DMAX",d.Arduino.ORDER_ATOMIC)+")",d.Arduino.ORDER_NONE]},d.Arduino.inout_buildin_led=function(){var n=this.getFieldValue("STAT");return d.Arduino.setups_.setup_output_13="pinMode(13, OUTPUT);","digitalWrite(13, "+n+");\n"},d.Arduino.inout_digital_write=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return d.Arduino.setups_["setup_output_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+", "+e+");\n"},d.Arduino.inout_digital_read=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.inout_analog_write=function(){return"analogWrite("+this.getFieldValue("PIN")+", "+d.Arduino.valueToCode(this,"NUM",d.Arduino.ORDER_ATOMIC)+");\n"},d.Arduino.inout_analog_read=function(){return["analogRead("+this.getFieldValue("PIN")+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.inout_tone=function(){var n=this.getFieldValue("PIN"),e=d.Arduino.valueToCode(this,"NUM",d.Arduino.ORDER_ATOMIC);return d.Arduino.setups_["setup_output"+n]="pinMode("+n+", OUTPUT);","tone("+n+", "+e+");\n"},d.Arduino.inout_notone=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_output"+n]="pinMode("+n+", OUTPUT);","noTone("+n+");\n"},d.Arduino.inout_highlow=function(){return["HIGH"==this.getFieldValue("BOOL")?"HIGH":"LOW",d.Arduino.ORDER_ATOMIC]},d.Arduino.servo_move=function(){var n=this.getFieldValue("PIN"),e=d.Arduino.valueToCode(this,"DEGREE",d.Arduino.ORDER_ATOMIC);return d.Arduino.definitions_.define_servo="#include <Servo.h>\n",d.Arduino.definitions_["var_servo"+n]="Servo servo_"+n+";\n",d.Arduino.setups_["setup_servo_"+n]="servo_"+n+".attach("+n+");\n","servo_"+n+".write("+e+");\n"},d.Arduino.servo_read_degrees=function(){var n=this.getFieldValue("PIN");return d.Arduino.definitions_.define_servo="#include <Servo.h>\n",d.Arduino.definitions_["var_servo"+n]="Servo servo_"+n+";\n",d.Arduino.setups_["setup_servo_"+n]="servo_"+n+".attach("+n+");\n","servo_"+n+".read()"},d.Arduino.serial_print=function(){var n=d.Arduino.valueToCode(this,"CONTENT",d.Arduino.ORDER_ATOMIC)||"0";return d.Arduino.setups_["setup_serial_"+o.default.serial]="Serial.begin("+o.default.serial+");\n","Serial.println("+n+");\n"},t.provide("Blockly.Arduino.loops"),t.require("Blockly.Arduino"),d.Arduino.controls_for=function(){var n,e,i=d.Arduino.nameDB_.getName(this.getFieldValue("VAR"),d.Variables.NAME_TYPE),r=d.Arduino.valueToCode(this,"FROM",d.Arduino.ORDER_ASSIGNMENT)||"0",t=d.Arduino.valueToCode(this,"TO",d.Arduino.ORDER_ASSIGNMENT)||"0",o=d.Arduino.statementToCode(this,"DO");return d.Arduino.INFINITE_LOOP_TRAP&&(o=d.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+o),r.match(/^-?\d+(\.\d+)?$/)&&t.match(/^-?\d+(\.\d+)?$/)?n="for ("+i+" = "+r+"; "+i+((e=parseFloat(r)<=parseFloat(t))?" <= ":" >= ")+t+"; "+i+(e?"++":"--")+") {\n"+o+"}\n":(n="",(e=r).match(/^\w+$/)||r.match(/^-?\d+(\.\d+)?$/)||(n+="int "+(e=d.Arduino.nameDB_.getDistinctName(i+"_start",d.Variables.NAME_TYPE))+" = "+r+";\n"),(r=t).match(/^\w+$/)||t.match(/^-?\d+(\.\d+)?$/)||(n+="int "+(r=d.Arduino.nameDB_.getDistinctName(i+"_end",d.Variables.NAME_TYPE))+" = "+t+";\n"),n+="for ("+i+" = "+e+";\n    ("+e+" <= "+r+") ? "+i+" <= "+r+" : "+i+" >= "+r+";\n    "+i+" += ("+e+" <= "+r+") ? 1 : -1) {\n"+o+"}\n"),n},d.Arduino.controls_whileUntil=function(){var n="UNTIL"==this.getFieldValue("MODE"),e=d.Arduino.valueToCode(this,"BOOL",n?d.Arduino.ORDER_LOGICAL_NOT:d.Arduino.ORDER_NONE)||"false",i=d.Arduino.statementToCode(this,"DO");return"while ("+(e=n?"!"+e:e)+") {\n"+(i=d.Arduino.INFINITE_LOOP_TRAP?d.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+i:i)+"}\n"},t.provide("Blockly.Arduino.grove"),t.require("Blockly.Arduino"),d.Arduino.grove_led=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return d.Arduino.setups_["setup_green_led_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},d.Arduino.grove_button=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_button_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_rotary_angle=function(){return["analogRead("+this.getFieldValue("PIN")+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_tilt_switch=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_tilt_switch_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_piezo_buzzer=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return d.Arduino.setups_["setup_piezo_buzzer_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},d.Arduino.grove_relay=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");return d.Arduino.setups_["setup_relay_"+n]="pinMode("+n+", OUTPUT);","digitalWrite("+n+","+e+");\n"},d.Arduino.grove_temporature_sensor=function(){var n=this.getFieldValue("PIN");return["round((1/(log((float)(1023-analogRead("+n+"))*10000/analogRead("+n+"))/10000)/3975+1/298.15)-273.15)",d.Arduino.ORDER_ATOMIC]};function u(n){for(var e=n,e=parseInt(e)?parseInt(n)+1:"A"+(parseInt(e.slice(1,e.length))+1),i=o.default.digital.length,r=!0,t=0;t<i;t++)o.default.digital[t][1]==e&&(r=!1);return r?(alert("Grove Sensor needs PIN#+1 port, current setting is out of bound."),null):e}function a(n){return"#"==n.charAt(0)?n.substring(1,7):n}return d.Arduino.grove_serial_lcd_print=function(){var n=this.getFieldValue("PIN"),e=d.Arduino.valueToCode(this,"TEXT",d.Arduino.ORDER_UNARY_POSTFIX)||"''",i=d.Arduino.valueToCode(this,"TEXT2",d.Arduino.ORDER_UNARY_POSTFIX)||"''",r=d.Arduino.valueToCode(this,"DELAY_TIME",d.Arduino.ORDER_ATOMIC)||"1000";d.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",d.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var t=u(n);d.Arduino.definitions_["var_lcd_"+n]="SerialLCD slcd_"+n+"("+n+","+t+");\n",d.Arduino.setups_["setup_lcd_"+n]="slcd_"+n+".begin();\n";t="slcd_"+n+".backlight();\n";return t+="slcd_"+n+".setCursor(0,0);\n",t+="slcd_"+n+".print("+e+");\n",t+="slcd_"+n+".setCursor(0,1);\n",t+="slcd_"+n+".print("+i+");\n",t+="delay("+r+");\n"},d.Arduino.grove_serial_lcd_power=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");d.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",d.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var i=u(n);d.Arduino.definitions_["var_lcd"+n]="SerialLCD slcd_"+n+"("+n+","+i+");\n";n="slcd_"+n;return n+="ON"===e?".Power();\n":".noPower();\n"},d.Arduino.grove_serial_lcd_effect=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("STAT");d.Arduino.definitions_.define_seriallcd="#include <SerialLCD.h>\n",d.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n";var i=u(n);d.Arduino.definitions_["var_lcd"+n]="SerialLCD slcd_"+n+"("+n+","+i+");\n";n="slcd_"+n;return n+="LEFT"===e?".scrollDisplayLeft();\n":"RIGHT"===e?".scrollDisplayRight();\n":".autoscroll();\n"},d.Arduino.grove_sound_sensor=function(){return["analogRead("+this.getFieldValue("PIN")+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_pir_motion_sensor=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_line_finder=function(){var n=this.getFieldValue("PIN");return d.Arduino.setups_["setup_input_"+n]="pinMode("+n+", INPUT);",["digitalRead("+n+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_ultrasonic_ranger=function(){var n=this.getFieldValue("PIN"),e=this.getFieldValue("UNIT");return d.Arduino.definitions_.define_ultrasonic="#include <Ultrasonic.h>\n",d.Arduino.definitions_["var_ultrasonic"+n]="Ultrasonic ultrasonic_"+n+"("+n+");",["cm"===e?"ultrasonic_"+n+".MeasureInCentimeters()":"ultrasonic_"+n+".MeasureInInches()",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_motor_shield=function(){var n=this.getFieldValue("DIRECTION");d.Arduino.setups_.setup_motor="pinMode(8,OUTPUT);//I1\n  pinMode(11,OUTPUT);//I2\n  pinMode(9,OUTPUT);//speedPinA\n  pinMode(12,OUTPUT);//I3\n  pinMode(13,OUTPUT);//i4\n  pinMode(10,OUTPUT);//speedPinB\n";var e="";return"forward"===n?(d.Arduino.definitions_.define_forward="void forward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n",e="forward();\n"):"right"===n?(d.Arduino.definitions_.define_right="void right()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,LOW);//turn DC Motor A move anticlockwise\n  digitalWrite(8,HIGH);\n}\n\n",e="right();\n"):"left"===n?(d.Arduino.definitions_.define_left="void left()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,HIGH);//turn DC Motor B move clockwise\n  digitalWrite(12,LOW);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",e="left();\n"):"backward"===n?(d.Arduino.definitions_.define_backward="void backward()\n{\n  analogWrite(9,127);//input a simulation value to set the speed\n  analogWrite(10,127);\n  digitalWrite(13,LOW);//turn DC Motor B move anticlockwise\n  digitalWrite(12,HIGH);\n  digitalWrite(11,HIGH);//turn DC Motor A move clockwise\n  digitalWrite(8,LOW);\n}\n\n",e="backward();\n"):"stop"===n&&(d.Arduino.definitions_.define_stop="void stop()\n{\ndigitalWrite(9,LOW);// Unenble the pin, to stop the motor. this should be done to avid damaging the motor.\ndigitalWrite(10,LOW);\ndelay(1000);\n}\n\n",e="stop();\n"),e},d.Arduino.grove_thumb_joystick=function(){var n=this.getFieldValue("PIN");return["analogRead("+("y"===this.getFieldValue("AXIS")?u(n):n)+")",d.Arduino.ORDER_ATOMIC]},d.Arduino.grove_rgb_led=function(){var n=this.getFieldValue("PIN"),e=u(n);d.Arduino.setups_["setup_input_"+n]="pinMode("+n+", OUTPUT);",d.Arduino.setups_["setup_input_"+e]="pinMode("+e+", OUTPUT);",d.Arduino.definitions_.define_uint8="#define uint8 unsigned char",d.Arduino.definitions_.define_uint16="#define uint16 unsigned int",d.Arduino.definitions_.define_uint32="#define uint32 unsigned long int",d.Arduino.definitions_["define_clkproduce_"+n]="void ClkProduce_"+n+"(void)\n{\n  digitalWrite("+n+", LOW);\n  delayMicroseconds(20);\n  digitalWrite("+n+", HIGH);\n  delayMicroseconds(20);\n}\n",d.Arduino.definitions_["define_send32zero_"+n]="void Send32Zero_"+n+"(void)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    digitalWrite("+e+", LOW);\n    ClkProduce_"+n+"();\n  }\n}\n",d.Arduino.definitions_.define_taskanticode="uint8 TakeAntiCode(uint8 dat)\n{\n  uint8 tmp = 0;\n  if ((dat & 0x80) == 0)\n  {\n    tmp |= 0x02;\n  }\n  \n  if ((dat & 0x40) == 0)\n  {\n    tmp |= 0x01;\n  }\n  return tmp;\n}\n",d.Arduino.definitions_["define_datasend_"+n]="// gray data\nvoid DatSend_"+n+"(uint32 dx)\n{\n  uint8 i;\n  for (i=0; i<32; i++)\n  {\n    if ((dx & 0x80000000) != 0)\n    {\n      digitalWrite("+e+", HIGH);\n    }\n    else\n    {\n      digitalWrite("+e+", LOW);\n    }\n  dx <<= 1;\n  ClkProduce_"+n+"();\n  }\n}\n",d.Arduino.definitions_["define_datadealwithsend_"+n]="// data processing\nvoid DataDealWithAndSend_"+n+"(uint8 r, uint8 g, uint8 b)\n{\n  uint32 dx = 0;\n  dx |= (uint32)0x03 << 30;             // highest two bits 1，flag bits\n  dx |= (uint32)TakeAntiCode(b) << 28;\n  dx |= (uint32)TakeAntiCode(g) << 26;\n  dx |= (uint32)TakeAntiCode(r) << 24;\n\n  dx |= (uint32)b << 16;\n  dx |= (uint32)g << 8;\n  dx |= r;\n\n  DatSend_"+n+"(dx);\n}\n";var i="Send32Zero_"+n+"(); // begin\n";if(0==this.itemCount_)return"";for(var r=0;r<this.itemCount_;r++){var t=this.getFieldValue("RGB"+r);i+="DataDealWithAndSend_"+n+"("+parseInt(a(t).substring(0,2),16)+", "+parseInt(a(t).substring(2,4),16)+", "+parseInt(a(t).substring(4,6),16)+"); // first node data\n"}return i+="Send32Zero_"+n+"();  // send to update data\n"},d.Arduino.grove_bluetooth_slave=function(){var n=this.getFieldValue("PIN"),e=u(n),i=this.getFieldValue("NAME"),r=(this.getFieldValue("PINCODE"),d.Arduino.statementToCode(this,"RCV")),t=d.Arduino.statementToCode(this,"SNT");return d.Arduino.definitions_.define_softwareserial="#include <SoftwareSerial.h>\n",d.Arduino.definitions_["var_bluetooth_"+n]="SoftwareSerial blueToothSerial_"+n+"("+n+","+e+");\n",d.Arduino.setups_["setup_bluetooth_"+n]="Serial.begin(9600);\n",d.Arduino.setups_["setup_bluetooth_"+n]+="  pinMode("+n+", INPUT);\n",d.Arduino.setups_["setup_bluetooth_"+n]+="  pinMode("+e+", OUTPUT);\n",d.Arduino.setups_["setup_bluetooth_"+n]+="  setupBlueToothConnection_"+n+"();\n",d.Arduino.definitions_["define_setupBlueToothConnection_"+n]="void setupBlueToothConnection_"+n+"()\n{\n  blueToothSerial_"+n+".begin(38400); //Set BluetoothBee BaudRate to default baud rate 38400\n  blueToothSerial_"+n+'.print("\\r\\n+STWMOD=0\\r\\n"); //set the bluetooth work in slave mode\n  blueToothSerial_'+n+'.print("\\r\\n+STNA='+i+'\\r\\n"); //set the bluetooth name as "'+i+'"\n  blueToothSerial_'+n+'.print("\\r\\n+STPIN=0000\\r\\n");//Set SLAVE pincode"0000"\n  blueToothSerial_'+n+'.print("\\r\\n+STOAUT=1\\r\\n"); // Permit Paired device to connect me\n  blueToothSerial_'+n+'.print("\\r\\n+STAUTO=0\\r\\n"); // Auto-connection should be forbidden here\n  delay(2000); // This delay is required.\n  blueToothSerial_'+n+'.print("\\r\\n+INQ=1\\r\\n"); //make the slave bluetooth inquirable \n  Serial.println("The slave bluetooth is inquirable!");\n  delay(2000); // This delay is required.\n  blueToothSerial_'+n+".flush();\n}\n","char recvChar_"+n+";\nwhile(1) {\n  if(blueToothSerial_"+n+".available()) {//check if there is any data sent from the remote bluetooth shield\n    recvChar_"+n+" = blueToothSerial_"+n+".read();\n    Serial.print(recvChar_"+n+");\n"+r+"  }\n  if(Serial.available()){//check if there is any data sent from the local serial terminal, you can add the other applications here\n    recvChar_"+n+" = Serial.read();\n    blueToothSerial_"+n+".print(recvChar_"+n+");\n"+t+"  }\n}\n"},t.provide("Blockly.Arduino.logic"),t.require("Blockly.Arduino"),d.Arduino.controls_if=function(){for(var n=0,e=d.Arduino.valueToCode(this,"IF"+n,d.Arduino.ORDER_NONE)||"false",i=d.Arduino.statementToCode(this,"DO"+n),r="if ("+e+") {\n"+i+"\n}",n=1;n<=this.elseifCount_;n++)r+=" else if ("+(d.Arduino.valueToCode(this,"IF"+n,d.Arduino.ORDER_NONE)||"false")+") {\n"+(i=d.Arduino.statementToCode(this,"DO"+n))+"}";return this.elseCount_&&(r+=" else {\n"+(i=d.Arduino.statementToCode(this,"ELSE"))+"\n}"),r+"\n"},d.Arduino.logic_compare=function(){var n=this.getFieldValue("OP"),e=d.Arduino.logic_compare.OPERATORS[n],n="=="==e||"!="==e?d.Arduino.ORDER_EQUALITY:d.Arduino.ORDER_RELATIONAL;return[(d.Arduino.valueToCode(this,"A",n)||"0")+" "+e+" "+(d.Arduino.valueToCode(this,"B",n)||"0"),n]},d.Arduino.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="},d.Arduino.logic_operation=function(){var n="AND"==this.getFieldValue("OP")?"&&":"||",e="&&"==n?d.Arduino.ORDER_LOGICAL_AND:d.Arduino.ORDER_LOGICAL_OR;return[(d.Arduino.valueToCode(this,"A",e)||"false")+" "+n+" "+(d.Arduino.valueToCode(this,"B",e)||"false"),e]},d.Arduino.logic_negate=function(){var n=d.Arduino.ORDER_UNARY_PREFIX;return["!"+(d.Arduino.valueToCode(this,"BOOL",n)||"false"),n]},d.Arduino.logic_boolean=function(){return["TRUE"==this.getFieldValue("BOOL")?"true":"false",d.Arduino.ORDER_ATOMIC]},d.Arduino.logic_null=function(){return["NULL",d.Arduino.ORDER_ATOMIC]},t.provide("Blockly.Arduino.math"),t.require("Blockly.Arduino"),d.Arduino.math_number=function(){var n=window.parseFloat(this.getFieldValue("NUM"));return[n,n<0?d.Arduino.ORDER_UNARY_PREFIX:d.Arduino.ORDER_ATOMIC]},d.Arduino.math_arithmetic=function(){var n=this.getFieldValue("OP"),e=d.Arduino.math_arithmetic.OPERATORS[n],i=e[0],r=e[1],n=d.Arduino.valueToCode(this,"A",r)||"0",e=d.Arduino.valueToCode(this,"B",r)||"0";return i?[n+i+e,r]:["Math.pow("+n+", "+e+")",d.Arduino.ORDER_UNARY_POSTFIX]},d.Arduino.math_arithmetic.OPERATORS={ADD:[" + ",d.Arduino.ORDER_ADDITIVE],MINUS:[" - ",d.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",d.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",d.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,d.Arduino.ORDER_NONE]},t.provide("Blockly.Arduino.procedures"),t.require("Blockly.Arduino"),d.Arduino.procedures_defreturn=function(){var n=d.Arduino.nameDB_.getName(this.getFieldValue("NAME"),d.Procedures.NAME_TYPE),e=d.Arduino.statementToCode(this,"STACK");d.Arduino.INFINITE_LOOP_TRAP&&(e=d.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+e);for(var i=d.Arduino.valueToCode(this,"RETURN",d.Arduino.ORDER_NONE)||"",r=(i=i&&"  return "+i+";\n")?"int":"void",t=[],o=0;o<this.arguments_.length;o++)t[o]="int "+d.Arduino.nameDB_.getName(this.arguments_[o],d.Variables.NAME_TYPE);i=r+" "+n+"("+t.join(", ")+") {\n"+e+i+"}\n",i=d.Arduino.scrub_(this,i);return d.Arduino.definitions_[n]=i,null},d.Arduino.procedures_defnoreturn=d.Arduino.procedures_defreturn,d.Arduino.procedures_callreturn=function(){for(var n=d.Arduino.nameDB_.getName(this.getFieldValue("NAME"),d.Procedures.NAME_TYPE),e=[],i=0;i<this.arguments_.length;i++)e[i]=d.Arduino.valueToCode(this,"ARG"+i,d.Arduino.ORDER_NONE)||"null";return[n+"("+e.join(", ")+")",d.Arduino.ORDER_UNARY_POSTFIX]},d.Arduino.procedures_callnoreturn=function(){for(var n=d.Arduino.nameDB_.getName(this.getFieldValue("NAME"),d.Procedures.NAME_TYPE),e=[],i=0;i<this.arguments_.length;i++)e[i]=d.Arduino.valueToCode(this,"ARG"+i,d.Arduino.ORDER_NONE)||"null";return n+"("+e.join(", ")+");\n"},d.Arduino.procedures_ifreturn=function(){var n="if ("+(d.Arduino.valueToCode(this,"CONDITION",d.Arduino.ORDER_NONE)||"false")+") {\n";return this.hasReturnValue_?n+="  return "+(d.Arduino.valueToCode(this,"VALUE",d.Arduino.ORDER_NONE)||"null")+";\n":n+="  return;\n",n+="}\n"},t.provide("Blockly.Arduino.texts"),t.require("Blockly.Arduino"),d.Arduino.text=function(){return[d.Arduino.quote_(this.getFieldValue("TEXT")),d.Arduino.ORDER_ATOMIC]},t.provide("Blockly.Arduino.variables"),t.require("Blockly.Arduino"),d.Arduino.variables_get=function(){return[d.Arduino.nameDB_.getName(this.getFieldValue("VAR"),d.Variables.NAME_TYPE),d.Arduino.ORDER_ATOMIC]},d.Arduino.variables_declare=function(){this.getFieldValue("TYPE");var n=d.Arduino.valueToCode(this,"VALUE",d.Arduino.ORDER_ASSIGNMENT)||"0",e=d.Arduino.nameDB_.getName(this.getFieldValue("VAR"),d.Variables.NAME_TYPE);return d.Arduino.setups_["setup_var"+e]=e+" = "+n+";\n",""},d.Arduino.variables_set=function(){var n=d.Arduino.valueToCode(this,"VALUE",d.Arduino.ORDER_ASSIGNMENT)||"0";return d.Arduino.nameDB_.getName(this.getFieldValue("VAR"),d.Variables.NAME_TYPE)+" = "+n+";\n"},d.Arduino});